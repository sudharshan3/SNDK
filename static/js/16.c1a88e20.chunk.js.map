{"version":3,"sources":["components/Loader.js","components/PageTitle.js","assets/images/avatar-blue.png","components/StatisticsChartWidget.js","pages/Dashboard/Statistics.js","pages/Dashboard/UserBox.js","pages/Dashboard/index.js"],"names":["Loader","className","PageTitle","props","to","breadCrumbItems","map","item","index","active","key","label","path","title","module","exports","StatisticsChartWidget","options","chart","sparkline","enabled","plotOptions","bar","columnWidth","xaxis","crosshairs","width","stroke","curve","yaxis","min","colors","type","series","name","data","textClass","Card","classNames","bgClass","CardBody","Row","Col","description","stats","trend","icon","value","height","connect","state","prescription","Prescription","customer","Customer","getPrescriptionList","getCustomerList","useEffect","Fragment","md","listloading","length","UserBox","sm","src","profileImg","style","alt","getLoggedInUser","user","firstName","lastName","email","country","AdminDashboard"],"mappings":"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","file":"static/js/16.c1a88e20.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n/**\r\n * Renders the preloader\r\n */\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"preloader\">\r\n            <div className=\"status\">\r\n                <div className=\"bouncing-loader\">\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\ntype PageTitleProps = {\r\n    breadCrumbItems: PropTypes.object,\r\n    title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps) => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div className=\"page-title-box\">\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem>\r\n                                <Link to=\"/\">SNDK</Link>\r\n                            </BreadcrumbItem>\r\n                            {props.breadCrumbItems.map((item, index) => {\r\n                                return item.active ? (\r\n                                    <BreadcrumbItem active key={index}>\r\n                                        {item.label}\r\n                                    </BreadcrumbItem>\r\n                                ) : (\r\n                                    <BreadcrumbItem key={index}>\r\n                                        <Link to={item.path}>{item.label}</Link>\r\n                                    </BreadcrumbItem>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <h4 className=\"page-title\">{props.title}</h4>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","module.exports = __webpack_public_path__ + \"static/media/avatar-blue.012f59bd.png\";","// @flow\r\nimport React from 'react';\r\nimport { Row, Col, Card, CardBody } from 'reactstrap';\r\nimport Chart from 'react-apexcharts';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\ntype StatisticsChartWidgetProps = {\r\n    colors?: Array<string>,\r\n    type?: string,\r\n    name?: string,\r\n    data?: Array<number>,\r\n    textClass?: string,\r\n    bgClass?: string,\r\n    description?: string,\r\n    title?: string,\r\n    stats?: string,\r\n    trend: PropTypes.object,\r\n};\r\n\r\nconst StatisticsChartWidget = (props: StatisticsChartWidgetProps) => {\r\n    const options = {\r\n        chart: {\r\n            sparkline: {\r\n                enabled: true,\r\n            },\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                columnWidth: '60%',\r\n            },\r\n        },\r\n        xaxis: {\r\n            crosshairs: {\r\n                width: 1,\r\n            },\r\n        },\r\n        stroke: {\r\n            width: 2,\r\n            curve: 'smooth',\r\n        },\r\n        yaxis: {\r\n            min: 0,\r\n        },\r\n        colors: props.colors || ['#008FFB'],\r\n    };\r\n    const type = props.type || 'bar';\r\n\r\n    const series = [{ name: props.name || 'Data', data: props.data || [] }];\r\n\r\n    const textClass = props.textClass || 'text-muted';\r\n\r\n    return (\r\n        <Card className={classNames('widget-flat', props.bgClass)}>\r\n            <CardBody>\r\n                <Row className=\"align-items-center\">\r\n                    <Col className=\"col-6\">\r\n                        <h5\r\n                            className={classNames('font-weight-normal', 'mt-0', 'text-truncate', textClass)}\r\n                            title={props.description}>\r\n                            {props.title}\r\n                        </h5>\r\n                        <h3 className=\"my-2 py-1\">{props.stats}</h3>\r\n\r\n                        {props.trend && (\r\n                            <p className={`mb-0 ${textClass}`}>\r\n                                <span className={classNames(props.trend.textClass, 'mr-2')}>\r\n                                    <i className={`${props.trend.icon}`}></i> {props.trend.value}\r\n                                </span>\r\n                            </p>\r\n                        )}\r\n                    </Col>\r\n\r\n                    <Col className=\"col-6\">\r\n                        <Chart className=\"apex-charts\" options={options} series={series} type={type} height={60} />\r\n                    </Col>\r\n                </Row>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default StatisticsChartWidget;\r\n","// @flow\r\nimport React, { useEffect } from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\nimport StatisticsChartWidget from '../../components/StatisticsChartWidget';\r\nimport { connect } from 'react-redux';\r\nimport LoaderWidget from '../../components/Loader';\r\nimport { getPrescriptionList ,getCustomerList} from '../../redux/actions';\r\nconst Statistics = (props) => {\r\n\r\n    useEffect(() => {\r\n        if (props.prescription && !props.prescription.prescription) {\r\n            props.getPrescriptionList();\r\n        }\r\n        if (props.customer && !props.customer.customer) {\r\n            props.getCustomerList();\r\n        }\r\n     \r\n    }, []);\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col md={6}>\r\n                {props.prescription && props.prescription.listloading && <LoaderWidget />}\r\n                {props.prescription && props.prescription.prescription && props.prescription.prescription.data && \r\n                \r\n                <StatisticsChartWidget\r\n                description=\"Prescriptions\"\r\n                title=\"Prescriptions\"\r\n                stats={props.prescription.prescription.data.length} \r\n                trend={{ textClass: 'text-success', icon: 'mdi mdi-arrow-up-bold', value: '3.00%' }}\r\n                colors={['#727cf5']}\r\n                data={[47, 45, 54, 38, 56, 24, 65, 31, 37, 39, 62, 51, 35, 41, 35]}>\r\n                    \r\n                </StatisticsChartWidget>\r\n            \r\n            \r\n            }\r\n                  \r\n                </Col>\r\n                <Col md={6}>\r\n                {props.customer && props.customer.customer && props.customer.customer.data && \r\n                  <StatisticsChartWidget\r\n                  description=\"Customers\"\r\n                  title=\"Customers\"\r\n                  stats={props.customer.customer.data.length} \r\n                  trend={{ textClass: 'text-success', icon: 'mdi mdi-arrow-up-bold', value: '3.00%' }}\r\n                  colors={['#727cf5']}\r\n                  data={[47, 45, 54, 38, 56, 24, 65, 31, 37, 39, 62, 51, 35, 41, 35]}></StatisticsChartWidget>\r\n                }\r\n                  \r\n                </Col>\r\n\r\n            \r\n             \r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        prescription: state.Prescription,\r\n        customer: state.Customer,\r\n        \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getPrescriptionList, getCustomerList})(\r\n    Statistics\r\n);","// @flow\r\nimport React from 'react';\r\nimport { Card, CardBody, Row, Col } from 'reactstrap';\r\n\r\nimport profileImg from '../../assets/images/avatar-blue.png';\r\n\r\nimport { getLoggedInUser, isUserAuthenticated } from '../../helpers/authUtils';\r\nconst UserBox = () => {\r\n    return (\r\n        <Card className=\"bg-info text-light\">\r\n            <CardBody className=\"profile-user-box\">\r\n                <Row>\r\n                    <Col sm={8}>\r\n                        <div className=\"media\">\r\n                            <span className=\"float-left m-2 mr-4\">\r\n                                <img\r\n                                    src={profileImg}\r\n                                    style={{ height: '100px' }}\r\n                                    alt=\"\"\r\n                                    className=\"rounded-circle img-thumbnail\"\r\n                                />\r\n                            </span>\r\n                            <div className=\"media-body\">\r\n                                <h4 className=\"mt-1 mb-1\">{getLoggedInUser().user.firstName +\" \"+ getLoggedInUser().user.lastName}</h4>\r\n                                <p className=\"font-13 text-dark-50\"> {getLoggedInUser().user.email}</p>\r\n\r\n                                <ul className=\"mb-0 list-inline\">\r\n                                    <li className=\"list-inline-item mr-3\">\r\n                                        <h5 className=\"mb-1\">{getLoggedInUser().user.country}</h5>\r\n                                    \r\n                                    </li>\r\n                                    <li className=\"list-inline-item\">\r\n                                        <h5 className=\"mb-1\">{getLoggedInUser().user.state}</h5>\r\n                                      \r\n                                    </li>\r\n                                 \r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n\r\n                    \r\n                </Row>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default UserBox;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\nimport PageTitle from '../../components/PageTitle';\r\nimport Statistics from './Statistics';\r\n\r\nimport UserBox from './UserBox';\r\n\r\nconst AdminDashboard = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <PageTitle\r\n                breadCrumbItems={[{ label: 'Dashboard', path: '/dashboard', active: true }]}\r\n                title={'Dashboard'}\r\n            />\r\n<UserBox/>\r\n            <Statistics />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"sourceRoot":""}