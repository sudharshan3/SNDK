{"version":3,"sources":["components/Loader.js","components/PageTitle.js","pages/Prescription/PrescriptionDetails.js","pages/Prescription/PrescriptionConfig.js","pages/Prescription/index.js"],"names":["Loader","className","PageTitle","props","to","breadCrumbItems","map","item","index","active","key","label","path","title","PrescriptionDetails","toggleModal","closeDetailsModal","Fragment","Card","CardBody","Modal","isOpen","this","toggleDetailsModal","toggle","size","ModalHeader","ModalBody","data","drugs","drug","Row","Col","md","drugName","quantity","refill","directions","note","React","Component","connect","API_BASE_URL","state","prescription","Prescription","getPrescriptionList","useState","setToggleDetailsModal","prescriptionData","setPrescriptionData","columns","dataField","text","headerClasses","sort","formatter","cell","row","rowIndex","formatExtraData","style","lineHeight","margin","id","customer","petName","classNames","petType","firstName","cellPhoneNo","cursor","onClick","handleDetailsModal","UncontrolledTooltip","placement","target","useEffect","SearchBar","Search","defaultSorted","order","listloading","bootstrap4","keyField","search","searchProps","width","Button","color","baseProps","bordered","hover","pagination","paginationFactory","sizePerPage","wrapperClasses"],"mappings":"+FAAA,oBAmBeA,IAdA,WACX,OACI,yBAAKC,UAAU,aACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,mBACX,8BACA,8BACA,mC,iCCXpB,qEA2CeC,IA9BG,SAACC,GACf,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,yBAAKF,UAAU,kBACX,yBAAKA,UAAU,oBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMG,GAAG,KAAT,SAEHD,EAAME,gBAAgBC,KAAI,SAACC,EAAMC,GAC9B,OAAOD,EAAKE,OACR,kBAAC,IAAD,CAAgBA,QAAM,EAACC,IAAKF,GACvBD,EAAKI,OAGV,kBAAC,IAAD,CAAgBD,IAAKF,GACjB,kBAAC,IAAD,CAAMJ,GAAIG,EAAKK,MAAOL,EAAKI,aAM/C,wBAAIV,UAAU,cAAcE,EAAMU,Y,mTC+CvCC,E,4MA1EXC,YAAc,WACV,EAAKZ,MAAMa,qB,4CAGf,WAEI,OACI,kBAAC,IAAMC,SAAP,KACI,kBAACC,EAAA,EAAD,CAAMjB,UAAU,qBACZ,kBAACkB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,OAAQC,KAAKnB,MAAMoB,mBACnBC,OAAQF,KAAKP,YACbd,UAAU,wBACVwB,KAAK,MAEL,kBAACC,EAAA,EAAD,CAAaF,OAAQF,KAAKP,YAAad,UAAU,gCAAjD,wBACA,kBAAC0B,EAAA,EAAD,KACKL,KAAKnB,MAAMyB,MAAQN,KAAKnB,MAAMyB,KAAKC,OACpCP,KAAKnB,MAAMyB,KAAKC,MAAMvB,KAAI,SAACwB,EAAMtB,GAC7B,OACI,kBAACuB,EAAA,EAAD,CAAKrB,IAAKF,EAAOP,UAAU,QAGf,kBAAC+B,EAAA,EAAD,CAAOC,GAAG,IAAIhC,UAAU,sBACpB,yBAAKA,UAAU,2BACf,2BAAOA,UAAU,iCAAgC,uBAAGA,UAAU,0BAA9D,cACI,4BAAK6B,EAAKI,YAGlB,kBAACF,EAAA,EAAD,CAAMC,GAAG,IAAIhC,UAAU,sBACnB,yBAAKA,UAAU,2BACf,2BAAOA,UAAU,iCAAgC,uBAAGA,UAAU,iCAA9D,aACI,4BAAK6B,EAAKK,YAGlB,kBAACH,EAAA,EAAD,CAAMC,GAAG,IAAIhC,UAAU,sBACnB,yBAAKA,UAAU,2BACf,2BAAOA,UAAU,iCAAgC,uBAAGA,UAAU,0BAA9D,WACI,4BAAK6B,EAAKM,UAGlB,kBAACJ,EAAA,EAAD,CAAMC,GAAG,IAAIhC,UAAU,sBACnB,yBAAKA,UAAU,2BACf,2BAAOA,UAAU,iCAAgC,uBAAGA,UAAU,0BAA9D,eACI,4BAAK6B,EAAKO,cAGlB,kBAACL,EAAA,EAAD,CAAMC,GAAG,IAAIhC,UAAU,sBACnB,yBAAKA,UAAU,2BACf,2BAAOA,UAAU,iCAAgC,uBAAGA,UAAU,0BAA9D,SACI,4BAAK6B,EAAKQ,qB,GAvDpCC,IAAMC,W,mCCwNzBC,GA7MCC,IA6MDD,aARS,SAACE,GAErB,MAAO,CACHC,aAAcD,EAAME,gBAKY,CAAEC,yBAA3BL,EA1MY,SAACtC,GAGxB,MAAoD4C,oBAAS,GAA7D,mBAAOxB,EAAP,KAA2ByB,EAA3B,KAEA,EAAgDD,mBAAS,MAAzD,mBAAOE,EAAP,KAAyBC,EAAzB,KACA,EAA0BH,mBAAS,MAAnC,mBAEMI,GAFN,UAEgB,CACZ,CACIC,UAAW,KACXC,KAAM,kBAENC,cAAe,0BACfC,MAAM,EAENC,UAAW,SAACC,EAAMC,EAAKC,EAAUC,GAAtB,OAEP,yBAAKC,MAAO,CAAEC,WAAY,SAAUC,OAAQ,IACxC,2BAAIL,EAAIM,OAKpB,CACIZ,UAAW,UACXC,KAAM,WAENC,cAAe,0BACfC,MAAM,EAENC,UAAW,SAACC,EAAMC,EAAKC,EAAUC,GAAtB,OACP,yBAAKC,MAAO,CAAEC,WAAY,SAAUC,OAAQ,IACxC,2BAAIL,EAAIO,SAASC,YAI7B,CACId,UAAW,UACXC,KAAM,WAENC,cAAe,0BACfC,MAAM,EAENC,UAAW,SAACC,EAAMC,EAAKC,EAAUC,GAAtB,OACP,yBAAKC,MAAO,CAAEC,WAAY,SAAUC,OAAQ,IACxC,4BACI,0BAAM9D,UAAYkE,IAAW,QAAQ,MAAgC,QAAzBT,EAAIO,SAASG,QAAoB,gBAAkB,iBACrGV,EAAIO,SAASG,aAKvB,CACIhB,UAAW,eACXC,KAAM,gBAENC,cAAe,0BACfC,MAAM,EAENC,UAAW,SAACC,EAAMC,EAAKC,EAAUC,GAAtB,OACP,yBAAKC,MAAO,CAAEC,WAAY,SAAUC,OAAQ,IACxC,2BAAIL,EAAIO,SAASI,cAI7B,CACIjB,UAAW,gBACXC,KAAM,wBAENC,cAAe,0BACfC,MAAM,EAENC,UAAW,SAACC,EAAMC,EAAKC,EAAUC,GAAtB,OACP,yBAAKC,MAAO,CAAEC,WAAY,SAAUC,OAAQ,IACxC,2BAAIL,EAAIO,SAASK,gBAY7B,CACIlB,UAAW,UACXC,KAAM,UACNC,cAAe,0BACfE,UAAW,SAACC,EAAMC,EAAKC,EAAUC,GAAtB,OACP,yBAAKC,MAAO,CAAEC,WAAY,SAAUC,OAAQ,EAAGQ,OAAQ,YACnD,uBAAGtE,UAAU,kDAAkD+D,GAAG,OAAOQ,QAAS,kBAAMC,EAAmBf,MAE3G,kBAACgB,EAAA,EAAD,CAAqBC,UAAU,MAAMC,OAAO,QAA5C,qBAShBC,qBAAU,WACF1E,EAAMyC,eAAiBzC,EAAMyC,aAAaA,cAC1CzC,EAAM2C,wBAGX,IAEH,IAAM2B,EAAqB,SAACf,GACxBV,GAAsB,GACtBE,EAAoBQ,IAShBoB,EAAcC,SAAdD,UACFE,EAAgB,CAClB,CACI5B,UAAW,KACX6B,MAAO,QAIf,OACI,oCACI,kBAAC,IAAMhE,SAAP,KACKd,EAAMyC,cAAgBzC,EAAMyC,aAAasC,aAAe,kBAAClF,EAAA,EAAD,MACxDG,EAAMyC,cAAgBzC,EAAMyC,aAAaA,cAAgBzC,EAAMyC,aAAaA,aAAahB,MAEtF,kBAAC,IAAD,CACIuD,YAAU,EACVC,SAAS,KACTxD,KAAMzB,EAAMyC,cAAgBzC,EAAMyC,aAAaA,cAAgBzC,EAAMyC,aAAaA,aAAahB,KAC/FuB,QAASA,EACTkC,QAAM,IACL,SAAClF,GAAD,OACG,kBAACe,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAMF,SAAP,KACI,kBAACc,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC8C,EAAD,iBACQ3E,EAAMmF,YADd,CAEIrF,UAAU,qBACV4D,MAAO,CAAE0B,MAAO,YAGxB,kBAACvD,EAAA,EAAD,CAAK/B,UAAU,cACX,kBAACuF,EAAA,EAAD,CACIC,MAAM,SACNxF,UAAU,QAEV,uBAAGA,UAAU,6BAJjB,2BASR,kBAAC,IAAD,iBACQE,EAAMuF,UADd,CAGIC,UAAU,EACVX,cAAeA,EACfY,OAAK,EAELC,WAAYC,IAAkB,CAAEC,YAAa,KAC7CC,eAAe,4BAU1CzE,GACW,kBAAC,EAAD,CAAqBA,mBAAoBA,EAAoBP,kBApE3D,WACtBgC,GAAsB,GACtBE,EAAoB,OAmEItB,KAAMqB,KAM1B,kBAAC,IAAD,WC/MNJ,E,4JAEF,WACI,OACI,oCACI,kBAAC3C,EAAA,EAAD,CACIG,gBAAiB,CACb,CAAEM,MAAO,eAAgBF,QAAQ,IAErCI,MAAO,iBAEX,kBAAC,EAAD,W,GAXW0B,IAAMC,WAiBlBK","file":"static/js/15.2913abba.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n/**\r\n * Renders the preloader\r\n */\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"preloader\">\r\n            <div className=\"status\">\r\n                <div className=\"bouncing-loader\">\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","// @flow\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\ntype PageTitleProps = {\r\n    breadCrumbItems: PropTypes.object,\r\n    title: string,\r\n};\r\n\r\n/**\r\n * PageTitle\r\n */\r\nconst PageTitle = (props: PageTitleProps) => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <div className=\"page-title-box\">\r\n                    <div className=\"page-title-right\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem>\r\n                                <Link to=\"/\">SNDK</Link>\r\n                            </BreadcrumbItem>\r\n                            {props.breadCrumbItems.map((item, index) => {\r\n                                return item.active ? (\r\n                                    <BreadcrumbItem active key={index}>\r\n                                        {item.label}\r\n                                    </BreadcrumbItem>\r\n                                ) : (\r\n                                    <BreadcrumbItem key={index}>\r\n                                        <Link to={item.path}>{item.label}</Link>\r\n                                    </BreadcrumbItem>\r\n                                );\r\n                            })}\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <h4 className=\"page-title\">{props.title}</h4>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default PageTitle;\r\n","import React, { Component } from 'react';\r\nimport { Row, Col, Card, CardBody, Modal, ModalHeader, ModalBody } from 'reactstrap';\r\n// import DepImg from \"../../assets/images/texa/prescription.jpg\"\r\n// import './style.scss'\r\n\r\n\r\nclass PrescriptionDetails extends React.Component {\r\n\r\n\r\n\r\n    toggleModal = () => {\r\n        this.props.closeDetailsModal()\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Card className=\"dept-details-card\">\r\n                    <CardBody>\r\n                        <Modal\r\n                            isOpen={this.props.toggleDetailsModal}\r\n                            toggle={this.toggleModal}\r\n                            className=\"modal-dialog-centered\"\r\n                            size=\"lg\"\r\n                        >\r\n                            <ModalHeader toggle={this.toggleModal} className=\"modal-colored-header bg-info\">Prescription Details</ModalHeader>\r\n                            <ModalBody>\r\n                                {this.props.data && this.props.data.drugs &&\r\n                                this.props.data.drugs.map((drug, index) => {\r\n                                    return (\r\n                                        <Row key={index} className=\"pl-3\">\r\n                                         \r\n                                                \r\n                                                    <Col   md=\"4\" className=\"mt-3 border-bottom\">\r\n                                                        <div className=\"dept-details-card-title\">\r\n                                                        <small className=\"text-primary font-weight-bold\"><i className=\"uil   uil-medkit mr-1\"></i> Drug Name</small>\r\n                                                            <h5>{drug.drugName}</h5>\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                    <Col  md=\"4\" className=\"mt-3 border-bottom\">\r\n                                                        <div className=\"dept-details-card-title\">\r\n                                                        <small className=\"text-primary font-weight-bold\"><i className=\"uil   uil-heart-medical mr-1\"></i> Quantity</small>\r\n                                                            <h5>{drug.quantity}</h5>\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                    <Col  md=\"4\" className=\"mt-3 border-bottom\">\r\n                                                        <div className=\"dept-details-card-title\">\r\n                                                        <small className=\"text-primary font-weight-bold\"><i className=\"uil  uil-syringe mr-1\"></i> Refill</small>\r\n                                                            <h5>{drug.refill}</h5>\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                    <Col  md=\"4\" className=\"mt-3 border-bottom\">\r\n                                                        <div className=\"dept-details-card-title\">\r\n                                                        <small className=\"text-primary font-weight-bold\"><i className=\"uil  uil-syringe mr-1\"></i> Directions</small>\r\n                                                            <h5>{drug.directions}</h5>\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                    <Col  md=\"4\" className=\"mt-3 border-bottom\">\r\n                                                        <div className=\"dept-details-card-title\">\r\n                                                        <small className=\"text-primary font-weight-bold\"><i className=\"uil  uil-syringe mr-1\"></i> Note</small>\r\n                                                            <h5>{drug.note}</h5>\r\n                                                        </div>\r\n                                                    </Col>\r\n                                            \r\n                                        </Row>\r\n                                 \r\n                                 )\r\n                                }\r\n                                )\r\n                            \r\n                                  \r\n                                \r\n                                }\r\n                             \r\n                            </ModalBody>\r\n                        </Modal>\r\n                    </CardBody>\r\n                </Card>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PrescriptionDetails","import React, { useEffect, useState } from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { Row, Col, Card, CardBody, Form, FormGroup, Input, Button, UncontrolledTooltip } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\n\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport { toast, ToastContainer, Zoom } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { connect } from 'react-redux';\r\nimport { getPrescriptionList } from '../../redux/actions';\r\nimport LoaderWidget from '../../components/Loader';\r\nimport { API_BASE_URL } from '../../services/hostSetting';\r\nimport './styles.css';\r\nimport PrescriptionDetails from './PrescriptionDetails';\r\nimport classNames from 'classnames';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\n\r\nconst baseUrl = API_BASE_URL;\r\n\r\n\r\nconst PrescriptionConfig = (props) => {\r\n\r\n\r\n    const [toggleDetailsModal, setToggleDetailsModal] = useState(false);\r\n  \r\n    const [prescriptionData, setPrescriptionData] = useState(null);\r\n    const [index, setIndex] = useState(null);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'id',\r\n            text: 'Prescription ID',\r\n\r\n            headerClasses: 'bg-info text-white py-2',\r\n            sort: true,\r\n\r\n            formatter: (cell, row, rowIndex, formatExtraData) => \r\n\r\n                <div style={{ lineHeight: 'normal', margin: 0 }}>\r\n                    <p>{row.id}</p>\r\n                </div>\r\n       \r\n            \r\n        },\r\n        {\r\n            dataField: 'petname',\r\n            text: 'Pet Name',\r\n\r\n            headerClasses: 'bg-info text-white py-2',\r\n            sort: true,\r\n\r\n            formatter: (cell, row, rowIndex, formatExtraData) => (\r\n                <div style={{ lineHeight: 'normal', margin: 0 }}>\r\n                    <p>{row.customer.petName}</p>\r\n                </div>\r\n            ),\r\n        },\r\n        {\r\n            dataField: 'pettype',\r\n            text: 'Pet Type',\r\n\r\n            headerClasses: 'bg-info text-white py-2',\r\n            sort: true,\r\n\r\n            formatter: (cell, row, rowIndex, formatExtraData) => (\r\n                <div style={{ lineHeight: 'normal', margin: 0 }}>\r\n                    <h5>\r\n                        <span className= {classNames('badge','p-1', row.customer.petType === 'DOG' ? 'badge-success' : 'badge-danger')}  \r\n                >{row.customer.petType}</span>\r\n                        </h5>\r\n                </div>\r\n            ),\r\n        },\r\n        {\r\n            dataField: 'customerName',\r\n            text: 'Customer Name',\r\n\r\n            headerClasses: 'bg-info text-white py-2',\r\n            sort: true,\r\n\r\n            formatter: (cell, row, rowIndex, formatExtraData) => (\r\n                <div style={{ lineHeight: 'normal', margin: 0 }}>\r\n                    <p>{row.customer.firstName}</p>\r\n                </div>\r\n            ),\r\n        },\r\n        {\r\n            dataField: 'customerPhone',\r\n            text: 'Customer Phone Number',\r\n\r\n            headerClasses: 'bg-info text-white py-2',\r\n            sort: true,\r\n\r\n            formatter: (cell, row, rowIndex, formatExtraData) => (\r\n                <div style={{ lineHeight: 'normal', margin: 0 }}>\r\n                    <p>{row.customer.cellPhoneNo}</p>\r\n                </div>\r\n            ),\r\n        },\r\n       \r\n      \r\n      \r\n      \r\n      \r\n       \r\n      \r\n\r\n        {\r\n            dataField: 'actions',\r\n            text: 'Actions',\r\n            headerClasses: 'bg-info text-white py-2',\r\n            formatter: (cell, row, rowIndex, formatExtraData) => (\r\n                <div style={{ lineHeight: 'normal', margin: 0, cursor: 'pointer' }}>\r\n                    <i className=\"uil uil-eye btn btn-sm btn-outline-success mr-2\" id=\"edit\" onClick={() => handleDetailsModal(row)}></i>\r\n                    \r\n                    <UncontrolledTooltip placement=\"top\" target=\"edit\">\r\n                        View Details\r\n                    </UncontrolledTooltip>\r\n                 \r\n                </div>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        if (props.prescription && !props.prescription.prescription) {\r\n            props.getPrescriptionList();\r\n        }\r\n     \r\n    }, []);\r\n\r\n    const handleDetailsModal = (row) => {\r\n        setToggleDetailsModal(true);\r\n        setPrescriptionData(row);\r\n    };\r\n    const closeDetailsModal = () => {\r\n        setToggleDetailsModal(false);\r\n        setPrescriptionData(null);\r\n    };\r\n\r\n\r\n  \r\n    const { SearchBar } = Search;\r\n    const defaultSorted = [\r\n        {\r\n            dataField: 'id',\r\n            order: 'asc',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <React.Fragment>\r\n                {props.prescription && props.prescription.listloading && <LoaderWidget />}\r\n                {props.prescription && props.prescription.prescription && props.prescription.prescription.data && (\r\n                   \r\n                    <ToolkitProvider\r\n                        bootstrap4\r\n                        keyField=\"id\"\r\n                        data={props.prescription && props.prescription.prescription && props.prescription.prescription.data}\r\n                        columns={columns}\r\n                        search>\r\n                        {(props) => (\r\n                            <Card>\r\n                                <CardBody>\r\n                                    <React.Fragment>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <SearchBar\r\n                                                    {...props.searchProps}\r\n                                                    className=\"form-control w-100\"\r\n                                                    style={{ width: '100%' }}\r\n                                                />\r\n                                            </Col>\r\n                                            <Col className=\"text-right\">\r\n                                                <Button\r\n                                                    color=\"danger\"\r\n                                                    className=\"mb-2\"\r\n                                                   >\r\n                                                    <i className=\"mdi mdi-plus-circle mr-2\"></i> Add New Prescription\r\n                                                </Button>\r\n                                            </Col>\r\n                                        </Row>\r\n\r\n                                        <BootstrapTable\r\n                                            {...props.baseProps}\r\n                                            \r\n                                            bordered={false}\r\n                                            defaultSorted={defaultSorted}\r\n                                            hover\r\n                                         \r\n                                            pagination={paginationFactory({ sizePerPage: 10 })}\r\n                                            wrapperClasses=\"table-responsive\"\r\n                                        />\r\n                                    </React.Fragment>\r\n                                </CardBody>\r\n                            </Card>\r\n                        )}\r\n                    </ToolkitProvider>\r\n                  \r\n                )}\r\n\r\n                {toggleDetailsModal &&\r\n                            <PrescriptionDetails toggleDetailsModal={toggleDetailsModal} closeDetailsModal={closeDetailsModal}\r\n                                data={prescriptionData} />\r\n                        }\r\n\r\n             \r\n            </React.Fragment>\r\n\r\n            <ToastContainer />\r\n        </>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        prescription: state.Prescription,\r\n        \r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getPrescriptionList})(\r\n    PrescriptionConfig\r\n);\r\n","import React from 'react';\r\nimport PageTitle from '../../components/PageTitle';\r\nimport PrescriptionConfig from './PrescriptionConfig'\r\nclass Prescription extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <PageTitle\r\n                    breadCrumbItems={[\r\n                        { label: 'Prescription', active: true },\r\n                    ]}\r\n                    title={'Prescription'}\r\n                />\r\n                <PrescriptionConfig/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Prescription"],"sourceRoot":""}