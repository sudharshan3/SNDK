{"version":3,"sources":["redux/customer/constants.js","routes/index.js","layouts/Auth.js","layouts/Vertical.js","constants/layout.js","layouts/Horizontal.js","layouts/Detached.js","routes/Routes.js","App.js","serviceWorker.js","redux/layout/reducers.js","redux/auth/reducers.js","redux/appMenu/reducers.js","redux/prescription/reducers.js","redux/customer/reducers.js","redux/reducers.js","services/index.js","services/endpoints.js","redux/auth/saga.js","redux/layout/saga.js","redux/appMenu/utils.js","redux/appMenu/saga.js","redux/prescription/saga.js","redux/customer/saga.js","redux/sagas.js","redux/store.js","index.js","helpers/authUtils.js","redux/auth/constants.js","redux/layout/constants.js","redux/appMenu/constants.js","redux/prescription/actions.js","redux/customer/actions.js","redux/layout/actions.js","redux/auth/actions.js","redux/actions.js","redux/appMenu/actions.js","services/hostSetting.js","redux/prescription/constants.js"],"names":["CUSTOMER_LIST","CUSTOMER_LIST_SUCCESS","CUSTOMER_LIST_FAILED","CUSTOMER_ADD","CUSTOMER_ADD_SUCCESS","CUSTOMER_ADD_FAILED","CUSTOMER_UPDATE","CUSTOMER_UPDATE_SUCCESS","CUSTOMER_UPDATE_FAILED","CUSTOMER_DELETE","CUSTOMER_DELETE_SUCCESS","CUSTOMER_DELETE_FAILED","Login","React","lazy","Logout","Register","PrivateRoute","Component","component","roles","rest","render","props","isUserAuthenticated","to","pathname","state","from","location","loggedInUser","getLoggedInUser","indexOf","role","rootRoute","path","exact","route","dashboardRoutes","name","icon","header","appRoutes","authRoutes","children","Route","allRoutes","authProtectedRoutes","allFlattenRoutes","flattenRoutes","routes","flatRoutes","forEach","item","push","DefaultLayout","componentDidMount","document","body","classList","add","componentWillUnmount","remove","this","fallback","className","connect","LeftSidebar","Topbar","Footer","emptyLoading","VerticalLayout","openLeftMenu","updateDimensions","window","innerWidth","changeSidebarType","addEventListener","bind","changeSidebarTheme","removeEventListener","isCondensed","layout","leftSideBarType","isLight","leftSideBarTheme","hideUserProfile","openLeftMenuCallBack","hideLogo","Container","fluid","Layout","Navbar","loading","HorizontalLayout","changeLayout","openMenu","e","preventDefault","setState","isMenuOpened","navCssClasses","DetachedLayout","openMenuCallback","Routes","getLayout","AuthLayout","layoutCls","layoutType","nextProps","nextState","oldLayout","newLayout","JSON","stringify","user","map","index","key","Auth","App","Boolean","hostname","match","INIT_STATE","layoutWidth","action","type","CHANGE_LAYOUT","payload","CHANGE_LAYOUT_WIDTH","CHANGE_SIDEBAR_THEME","CHANGE_SIDEBAR_TYPE","LOGIN_USER","LOGIN_USER_SUCCESS","error","LOGIN_USER_FAILED","REGISTER_USER","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","LOGOUT_USER","AppMenu","INIT_MENU","INIT_MENU_SUCCESS","CHANGE_ACTIVE_MENU_FROM_LOCATION","CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS","Prescription","PRESCRIPTION_LIST","listloading","PRESCRIPTION_LIST_SUCCESS","prescription","PRESCRIPTION_LIST_FAILED","PRESCRIPTION_ADD","PRESCRIPTION_ADD_SUCCESS","prescriptionAdd","PRESCRIPTION_ADD_FAILED","PRESCRIPTION_UPDATE","PRESCRIPTION_UPDATE_SUCCESS","prescriptionUpdate","PRESCRIPTION_UPDATE_FAILED","PRESCRIPTION_DELETE","PRESCRIPTION_DELETE_SUCCESS","prescriptionDelete","PRESCRIPTION_DELETE_FAILED","Customer","customer","customerAdd","customerUpdate","customerDelete","combineReducers","ApiCall","options","new_options","axios","then","response","baseUrl","API_BASE_URL","endpoints","hostUrl","loginUrl","registerUrl","prescriptionList","customerList","login","logout","register","watchLoginUser","watchLogoutUser","watchRegisterUser","authSaga","setSession","Cookies","set","username","password","sendData","email","headers","method","url","data","call","status","put","loginUserSuccess","console","log","loginUserFailed","message","history","registerUserSuccess","registerUserFailed","takeEvery","all","fork","changeLayoutWidth","changeLeftSidebarTheme","changeLeftSidebarType","watchChangeLayoutType","watchChangeLayoutWidth","watchChangeLeftSidebarTheme","watchChangeLeftSidebarType","LayoutSaga","changeBodyAttribute","attribute","value","setAttribute","changeLeftSidebarThemeAction","changeSidebarTypeAction","changeLayoutWidthAction","width","theme","uuid","menuItems","assignIdAndParent","parentId","id","active","initMenuAndItems","changeActiveMenuFromLocation","watchMenuInit","watchMenuChange","appMenuSaga","getActivatedMenuItemIds","matchingItems","menuItem","assignIds","initMenuSuccess","activatedMenuItemIds","changeActiveMenuFromLocationSuccess","PrescriptionList","PrescriptionAdd","PrescriptionUpdate","PrescriptionDelete","watchPrescriptionList","watchPrescriptionAdd","watchPrescriptionUpdate","watchPrescriptionDelete","WarnFields","msg","toast","transition","Zoom","Authorization","token","getPrescriptionListSuccess","getPrescriptionListFailed","code","errors","success","getPrescriptionAddSuccess","getPrescriptionAddFailed","getPrescriptionUpdateSuccess","info","getPrescriptionUpdateFailed","getPrescriptionDeleteSuccess","getPrescriptionDeleteFailed","CustomerList","CustomerAdd","CustomerUpdate","CustomerDelete","watchCustomerList","watchCustomerAdd","watchCustomerUpdate","watchCustomerDelete","getCustomerListSuccess","getCustomerListFailed","getCustomerAddSuccess","getCustomerAddFailed","getCustomerUpdateSuccess","getCustomerUpdateFailed","getCustomerDeleteSuccess","getCustomerDeleteFailed","rootSaga","getState","layoutSaga","prescriptionSaga","customerSaga","sagaMiddleware","createSagaMiddleware","middlewares","ReactDOM","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","sagas","configureStore","getElementById","navigator","serviceWorker","ready","registration","unregister","decoded","jwtDecode","currentTime","Date","now","exp","warn","get","parse","getPrescriptionList","getCustomerList","sidebarType","loginUser","registerUser","fullname","logoutUser","initMenu"],"mappings":"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","file":"static/js/main.4d191765.chunk.js","sourcesContent":["/* CUSTOMER */\r\nexport const CUSTOMER_LIST = 'CUSTOMER_LIST';\r\nexport const CUSTOMER_LIST_SUCCESS = 'CUSTOMER_LIST_SUCCESS';\r\nexport const CUSTOMER_LIST_FAILED = 'CUSTOMER_LIST_FAILED';\r\n\r\nexport const CUSTOMER_ADD = 'CUSTOMER_ADD';\r\nexport const CUSTOMER_ADD_SUCCESS = 'CUSTOMER_ADD_SUCCESS';\r\nexport const CUSTOMER_ADD_FAILED = 'CUSTOMERADD_ADD_FAILED';\r\n\r\nexport const CUSTOMER_UPDATE = 'CUSTOMER_UPDATE';\r\nexport const CUSTOMER_UPDATE_SUCCESS = 'CUSTOMER_UPDATE_SUCCESS';\r\nexport const CUSTOMER_UPDATE_FAILED = 'CUSTOMER_UPDATE_FAILED';\r\n\r\nexport const CUSTOMER_DELETE = 'CUSTOMER_DELETE';\r\nexport const CUSTOMER_DELETE_SUCCESS = 'CUSTOMER_DELETE_SUCCESS';\r\nexport const CUSTOMER_DELETE_FAILED = 'CUSTOMERADD_DELETE_FAILED';\r\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\n\nimport { isUserAuthenticated, getLoggedInUser } from '../helpers/authUtils';\n\n// lazy load all the views\n\n\nconst Login = React.lazy(() => import('../pages/auth/Login'));\nconst Logout = React.lazy(() => import('../pages/auth/Logout'));\nconst Register = React.lazy(() => import('../pages/auth/Register'));\nconst AdminDashboard = React.lazy(() => import('../pages/Dashboard'));\nconst PrescriptionRoute = React.lazy(() => import('../pages/Prescription'));\nconst Customer = React.lazy(() => import('../pages/Customers'));\n\n\n\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => (\n    <Route\n        {...rest}\n        render={props => {\n            if (!isUserAuthenticated()) {\n        \n                return <Redirect to={{ pathname: '/account/login', state: { from: props.location } }} />;\n            }\n\n            const loggedInUser = getLoggedInUser();\n  \n            if (roles && roles.indexOf(loggedInUser.role) === -1) {\n       \n                return <Redirect to={{ pathname: '/' }} />;\n            }\n\n       \n            return <Component {...props} />;\n        }}\n    />\n);\n\n\nconst rootRoute = {\n    path: '/',\n    exact: true,\n    component: () => <Redirect to=\"/dashboard\" />,\n    route: PrivateRoute,\n};\n\n\nconst dashboardRoutes = {\n    path: '/dashboard',\n    name: 'Dashboard',\n    route: PrivateRoute,\n    icon: 'uil-home',\n    component: AdminDashboard,\n    header: 'Navigation',\n};\n\nconst prescriptionRoutes = {\n    path: '/prescription',\n    name: 'Prescription',\n    route: PrivateRoute,\n    icon: 'uil-clipboard-alt',\n    component: PrescriptionRoute,\n    header: 'Management',\n};\nconst customerRoutes = {\n    path: '/customers',\n    name: 'Customers',\n    route: PrivateRoute,\n  \n    icon: 'uil-user',\n    component: Customer,\n};\nconst appRoutes = [\n    prescriptionRoutes,\n    customerRoutes,\n   \n];\n\n\n\nconst authRoutes = {\n    path: '/account',\n    name: 'Auth',\n    children: [\n        {\n            path: '/account/login',\n            name: 'Login',\n            component: Login,\n            route: Route,\n        },\n        {\n            path: '/account/logout',\n            name: 'Logout',\n            component: Logout,\n            route: Route,\n        },\n        {\n            path: '/account/register',\n            name: 'Register',\n            component: Register,\n            route: Route,\n        },\n        \n    ],\n};\n\n\n\nconst flattenRoutes = routes => {\n    let flatRoutes = [];\n\n    routes = routes || [];\n    routes.forEach(item => {\n        flatRoutes.push(item);\n\n        if (typeof item.children !== 'undefined') {\n            flatRoutes = [...flatRoutes, ...flattenRoutes(item.children)];\n        }\n    });\n    return flatRoutes;\n};\n\n\nconst allRoutes = [rootRoute, dashboardRoutes, ...appRoutes, authRoutes,];\n\nconst authProtectedRoutes = [dashboardRoutes, ...appRoutes,];\n\nconst allFlattenRoutes = flattenRoutes(allRoutes);\n\nexport { allRoutes, authProtectedRoutes, allFlattenRoutes };\n","// @flow\nimport React, { Component, Suspense } from 'react';\nimport { connect } from 'react-redux';\n\n\nconst loading = () => <div className=\"text-center\"></div>;\n\ntype DefaultLayoutProps = {\n    children?: any,\n};\n\nclass DefaultLayout extends Component<DefaultLayoutProps> {\n    /**\n     * On component update - update layout\n     */\n    componentDidMount = () => {\n        if (document.body) document.body.classList.add('authentication-bg');\n    };\n\n    /**\n     * On component unmount - reset layout\n     */\n    componentWillUnmount = () => {\n        if (document.body) document.body.classList.remove('authentication-bg');\n    };\n\n    render() {\n        const children = this.props.children || null;\n        return <Suspense fallback={loading()}>{children}</Suspense>;\n    }\n}\n\nexport default connect()(DefaultLayout);\n","// @flow\nimport React, { Component, Suspense } from 'react';\nimport { Container } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { changeSidebarTheme, changeSidebarType } from '../redux/actions';\nimport * as layoutConstants from '../constants/layout';\n\n\n// code splitting and lazy loading\n// https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\nconst LeftSidebar = React.lazy(() => import('../components/LeftSidebar'));\nconst Topbar = React.lazy(() => import('../components/Topbar'));\nconst Footer = React.lazy(() => import('../components/Footer'));\n\n\ntype VerticalLayoutProps = {\n    changeLayout: PropTypes.func,\n    changeSidebarTheme: PropTypes.func,\n    changeSidebarType: PropTypes.func,\n    children?: any,\n    layout: {\n        leftSideBarType?: string,\n        leftSideBarTheme?: string,\n    },\n};\n\ntype VerticalLayoutState = {\n    isMenuOpened?: boolean,\n};\n\n// loading\nconst emptyLoading = () => <div></div>;\nconst loading = () => <div className=\"text-center\"></div>;\n\nclass VerticalLayout extends Component<VerticalLayoutProps, VerticalLayoutState> {\n    constructor(props) {\n        super(props);\n        this.openLeftMenu = this.openLeftMenu.bind(this);\n    }\n\n    /**\n     * Opens the left menu - mobile\n     */\n    openLeftMenu = () => {\n        if (document.body) document.body.classList.add('sidebar-enable');\n    };\n\n    /**\n     * Handles the menu on window resizes\n     */\n    updateDimensions = () => {\n        // activate the condensed sidebar if smaller devices like ipad or tablet\n        if (window.innerWidth >= 768 && window.innerWidth <= 1000) {\n            this.props.changeSidebarType(layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED);\n        } else if(window.innerWidth > 1000) {\n            this.props.changeSidebarType(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED);\n        }\n    }\n\n    componentDidMount = () => {\n        window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n\n        this.props.changeSidebarTheme(layoutConstants.LEFT_SIDEBAR_THEME_LIGHT);\n\n        // activate the condensed sidebar if smaller devices like ipad or tablet\n        if (window.innerWidth >= 768 && window.innerWidth <= 1028) {\n            this.props.changeSidebarType(layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED);\n        }\n    };\n\n    /**\n     * Removes the listener\n     */\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateDimensions.bind(this));\n    }\n\n\n    render() {\n        // get the child view which we would like to render\n        const children = this.props.children || null;\n\n        const isCondensed = this.props.layout.leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED;\n        const isLight = this.props.layout.leftSideBarTheme === layoutConstants.LEFT_SIDEBAR_THEME_LIGHT;\n\n        return (\n            <div className=\"app\">\n                <div className=\"wrapper\">\n                    <Suspense fallback={emptyLoading()}>\n                        <LeftSidebar\n                            {...this.props}\n                            isCondensed={isCondensed}\n                            isLight={isLight}\n                            hideUserProfile={true}\n                        />\n                    </Suspense>\n\n                    <div className=\"content-page\">\n                        <div className=\"content\">\n                            <Suspense fallback={emptyLoading()}>\n                                <Topbar {...this.props} openLeftMenuCallBack={this.openLeftMenu} hideLogo={true} />\n                            </Suspense>\n\n                            <Container fluid>\n                                <Suspense fallback={loading()}>{children}</Suspense>\n                            </Container>\n                        </div>\n\n                        <Suspense fallback={emptyLoading()}>\n                            <Footer {...this.props} />\n                        </Suspense>\n                    </div>\n                </div>\n\n              \n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        layout: state.Layout,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    { changeSidebarTheme, changeSidebarType }\n)(VerticalLayout);\n","/* Layout types and other constants */\n\nexport const LAYOUT_VERTICAL = 'vertical';\nexport const LAYOUT_HORIZONTAL = 'topnav';\nexport const LAYOUT_DETACHED = 'detached';\n\nexport const LAYOUT_WIDTH_FLUID = 'fluid';\nexport const LAYOUT_WIDTH_BOXED = 'boxed';\n\nexport const LEFT_SIDEBAR_THEME_DEFAULT = 'default';\nexport const LEFT_SIDEBAR_THEME_LIGHT = 'light';\nexport const LEFT_SIDEBAR_THEME_DARK = 'dark';\n\nexport const LEFT_SIDEBAR_TYPE_FIXED = 'fixed';\nexport const LEFT_SIDEBAR_TYPE_CONDENSED = 'condensed';\nexport const LEFT_SIDEBAR_TYPE_SCROLLABLE = 'scrollable';\n","// @flow\nimport React, { Component, Suspense } from 'react';\nimport { Container } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { changeLayout } from '../redux/actions';\nimport * as layoutConstants from '../constants/layout';\n\n\n// code splitting and lazy loading\n// https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\nconst Topbar = React.lazy(() => import('../components/Topbar'));\nconst Navbar = React.lazy(() => import('../components/Navbar'));\nconst Footer = React.lazy(() => import('../components/Footer'));\n\n\nconst loading = () => <div className=\"text-center\"></div>;\n\ntype HorizontalLayoutProps = {\n    changeLayout: PropTypes.func,\n    children: PropTypes.object,\n    layout: PropTypes.object,\n};\n\ntype HorizontalLayoutState = {\n    isMenuOpened: boolean,\n};\n\nclass HorizontalLayout extends Component<HorizontalLayoutProps, HorizontalLayoutState> {\n    constructor(props) {\n        super(props);\n\n        this.openMenu = this.openMenu.bind(this);\n\n        this.state = {\n            isMenuOpened: false,\n        };\n    }\n\n    componentDidMount = () => {\n        this.props.changeLayout(layoutConstants.LAYOUT_HORIZONTAL);\n    };\n\n    /**\n     * Opens the menu - mobile\n     */\n    openMenu = e => {\n        e.preventDefault();\n        this.setState({ isMenuOpened: !this.state.isMenuOpened });\n    };\n\n    render() {\n        // get the child view which we would like to render\n        const children = this.props.children || null;\n\n        return (\n            <div className=\"app\">\n                <div className=\"wrapper\">\n                    <div className=\"content-page\">\n                        <div className=\"content\">\n                            <Suspense fallback={loading()}>\n                                <Topbar\n                                    {...this.props}\n                                    isMenuOpened={this.state.isMenuOpened}\n                                    openLeftMenuCallBack={this.openMenu}\n                                    navCssClasses=\"topnav-navbar\"\n                                />\n                            </Suspense>\n\n                            <Suspense fallback={loading()}>\n                                <Navbar {...this.props} isMenuOpened={this.state.isMenuOpened} />\n                            </Suspense>\n\n                            <Container fluid>\n                                <Suspense fallback={loading()}>{children}</Suspense>\n                            </Container>\n                        </div>\n\n                        <Suspense fallback={loading()}>\n                            <Footer {...this.props} />\n                        </Suspense>\n\n                     \n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        layout: state.Layout,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    { changeLayout }\n)(HorizontalLayout);\n","// @flow\nimport React, { Component, Suspense } from 'react';\nimport { Container } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { changeLayout } from '../redux/actions';\nimport * as layoutConstants from '../constants/layout';\n\n// code splitting and lazy loading\n// https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\nconst LeftSidebar = React.lazy(() => import('../components/LeftSidebar'));\nconst Topbar = React.lazy(() => import('../components/Topbar'));\nconst Footer = React.lazy(() => import('../components/Footer'));\n\n\nconst loading = () => <div className=\"text-center\"></div>;\n\ntype DetachedLayoutProps = {\n    changeLayout: PropTypes.func,\n    children?: any,\n    layout: {\n        leftSideBarType?: string,\n        leftSideBarTheme?: string,\n    },\n};\n\ntype DetachedLayoutState = {\n    isMenuOpened?: boolean,\n};\n\nclass DetachedLayout extends Component<DetachedLayoutProps, DetachedLayoutState> {\n    constructor(props) {\n        super(props);\n\n        this.openMenu = this.openMenu.bind(this);\n\n        this.state = {\n            isMenuOpened: false,\n        };\n    }\n\n    componentDidMount = () => {\n        this.props.changeLayout(layoutConstants.LAYOUT_DETACHED);\n    };\n\n    /**\n     * Opens the menu - mobile\n     */\n    openMenu = e => {\n        e.preventDefault();\n        this.setState({ isMenuOpened: !this.state.isMenuOpened });\n        if (document.body) document.body.classList.add('sidebar-enable');\n    };\n\n    render() {\n        // get the child view which we would like to render\n        const children = this.props.children || null;\n        const isCondensed = this.props.layout.leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED;\n        const isLight = this.props.layout.leftSideBarTheme === layoutConstants.LEFT_SIDEBAR_THEME_LIGHT;\n\n        return (\n            <div className=\"app\">\n                <Suspense fallback={loading()}>\n                    <Topbar\n                        {...this.props}\n                        isMenuOpened={this.state.isMenuOpened}\n                        openMenuCallback={this.openMenu}\n                        navCssClasses=\"topnav-navbar topnav-navbar-dark\"\n                    />\n                </Suspense>\n                <Container fluid>\n                    <div className=\"wrapper\">\n                        <Suspense fallback={loading()}>\n                            <LeftSidebar\n                                {...this.props}\n                                isMenuOpened={this.state.isMenuOpened}\n                                isCondensed={isCondensed}\n                                isLight={isLight}\n                                hideLogo={true}\n                            />\n                        </Suspense>\n\n                        <div className=\"content-page\">\n                            <div className=\"content\">\n                                <Suspense fallback={loading()}>{children}</Suspense>\n                            </div>\n\n                            <Suspense fallback={loading()}>\n                                <Footer {...this.props} />\n                            </Suspense>\n                        </div>\n                    </div>\n                </Container>\n            \n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        layout: state.Layout,\n    };\n};\nexport default connect(\n    mapStateToProps,\n    { changeLayout }\n)(DetachedLayout);\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { allFlattenRoutes as routes } from './index';\r\nimport { isUserAuthenticated } from '../helpers/authUtils';\r\nimport * as layoutConstants from '../constants/layout';\r\n\r\n// All layouts/containers\r\nimport AuthLayout from '../layouts/Auth';\r\nimport VerticalLayout from '../layouts/Vertical';\r\nimport HorizontalLayout from '../layouts/Horizontal';\r\nimport DetachedLayout from '../layouts/Detached';\r\n\r\n\r\nclass Routes extends Component {\r\n    // returns the layout\r\n    getLayout = () => {\r\n        if (!isUserAuthenticated()) return AuthLayout;\r\n\r\n        let layoutCls = VerticalLayout;\r\n\r\n        switch (this.props.layout.layoutType) {\r\n            case layoutConstants.LAYOUT_HORIZONTAL:\r\n                layoutCls = HorizontalLayout;\r\n                break;\r\n            case layoutConstants.LAYOUT_DETACHED:\r\n                layoutCls = DetachedLayout;\r\n                break;\r\n            default:\r\n                layoutCls = VerticalLayout;\r\n                break;\r\n        }\r\n        return layoutCls;\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        let oldLayout = { ...this.props.layout };\r\n        \r\n        let newLayout = { ...nextProps.layout };\r\n      \r\n        return (\r\n            JSON.stringify(oldLayout) !== JSON.stringify(newLayout) ||\r\n            JSON.stringify(this.props.user) !== JSON.stringify(nextProps.user)\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const Layout = this.getLayout();\r\n   \r\n        return (\r\n            <BrowserRouter>\r\n                <Layout {...this.props}>\r\n                    <Switch>\r\n                        {routes.map((route, index) => {\r\n                            return (\r\n                                !route.children && (\r\n                                    <route.route\r\n                                        key={index}\r\n                                        path={route.path}\r\n                                        roles={route.roles}\r\n                                        exact={route.exact}\r\n                                        component={route.component}></route.route>\r\n                                )\r\n                            );\r\n                        })}\r\n                    </Switch>\r\n                </Layout>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layout: state.Layout,\r\n        user: state.Auth.user,\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(Routes);\r\n","import React, { Component } from 'react';\nimport Routes from './routes/Routes';\n\nimport './assets/scss/Saas.scss';\n\n\ntype AppProps = {};\n\nclass App extends Component<AppProps> {\n    render() {\n        return <Routes></Routes>;\n    }\n}\n\nexport default App;\n","\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n\n        window.location.hostname === '[::1]' ||\n   \n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      \n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n           \n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n               \n                checkValidServiceWorker(swUrl, config);\n\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n               \n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                         \n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                           \n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                          \n                            console.log('Content is cached for offline use.');\n\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n \n    fetch(swUrl)\n        .then(response => {\n\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n           \n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n              \n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","// @flow\nimport {\n    CHANGE_LAYOUT,\n    CHANGE_LAYOUT_WIDTH,\n    CHANGE_SIDEBAR_THEME,\n    CHANGE_SIDEBAR_TYPE,\n    \n} from './constants';\n\nimport * as layoutConstants from '../../constants/layout';\n\nconst INIT_STATE = {\n    layoutType: layoutConstants.LAYOUT_VERTICAL,\n    layoutWidth: layoutConstants.LAYOUT_WIDTH_FLUID,\n    leftSideBarTheme: layoutConstants.LEFT_SIDEBAR_THEME_LIGHT ,\n    leftSideBarType: layoutConstants.LEFT_SIDEBAR_TYPE_FIXED,\n    \n};\n\ntype LayoutAction = { type: string, payload?: string | null };\n\n\nconst Layout = (state: State = INIT_STATE, action: LayoutAction) => {\n    \n    switch (action.type) {\n        case CHANGE_LAYOUT:\n            return {\n                ...state,\n                layoutType: action.payload,\n            };\n        case CHANGE_LAYOUT_WIDTH:\n            return {\n                ...state,\n                layoutWidth: action.payload,\n            };\n        case CHANGE_SIDEBAR_THEME:\n         \n            return {\n                ...state,\n                leftSideBarTheme: action.payload,\n            };\n        case CHANGE_SIDEBAR_TYPE:\n            return {\n                ...state,\n                leftSideBarType: action.payload,\n            };\n     \n    \n        default:\n            return state;\n    }\n};\n\nexport default Layout;\n","// @flow\nimport {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n \n} from './constants';\n\nimport { getLoggedInUser } from '../../helpers/authUtils';\n\nconst INIT_STATE = {\n    user: getLoggedInUser(),\n    loading: false,\n};\n\ntype AuthAction = { type: string, payload: {} | string };\ntype State = { user?: {} | null, loading?: boolean, +value?: boolean };\n\nconst Auth = (state: State = INIT_STATE, action: AuthAction) => {\n    switch (action.type) {\n        case LOGIN_USER:\n            return { ...state, loading: true };\n        case LOGIN_USER_SUCCESS:\n            return { ...state, user: action.payload, loading: false, error: null };\n        case LOGIN_USER_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        case REGISTER_USER:\n            return { ...state, loading: true };\n        case REGISTER_USER_SUCCESS:\n            return { ...state, user: action.payload, loading: false, error: null };\n        case REGISTER_USER_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        case LOGOUT_USER:\n            return { ...state, user: null };\n        \n        default:\n            return { ...state };\n    }\n};\n\nexport default Auth;\n","import {\n    INIT_MENU,\n    INIT_MENU_SUCCESS,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n} from './constants';\n\ntype Action = { type: string, payload: {} };\ntype State = { +value: boolean };\n\nconst AppMenu = (state: State = {}, action: Action) => {\n    switch (action.type) {\n        case INIT_MENU:\n            return action.payload;\n        case INIT_MENU_SUCCESS:\n            return { ...state, ...action.payload };\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION:\n            return { ...state };\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n};\n\nexport default AppMenu;\n","// @flow\r\nimport {\r\n    PRESCRIPTION_LIST,\r\n    PRESCRIPTION_LIST_SUCCESS,\r\n    PRESCRIPTION_LIST_FAILED,\r\n    PRESCRIPTION_ADD,\r\n    PRESCRIPTION_ADD_SUCCESS,\r\n    PRESCRIPTION_ADD_FAILED,\r\n    PRESCRIPTION_UPDATE,\r\n    PRESCRIPTION_UPDATE_SUCCESS,\r\n    PRESCRIPTION_UPDATE_FAILED,\r\n    PRESCRIPTION_DELETE,\r\n    PRESCRIPTION_DELETE_SUCCESS,\r\n    PRESCRIPTION_DELETE_FAILED\r\n} from './constants';\r\n\r\nimport { getLoggedInUser } from '../../helpers/authUtils';\r\n\r\nconst INIT_STATE = {\r\n    user: getLoggedInUser(),\r\n    loading: false,\r\n};\r\n\r\ntype PrescriptionAction = { type: string, payload: {} | string };\r\ntype State = { user?: {} | null, loading?: boolean, +value ?: boolean };\r\n\r\nconst Prescription = (state: State = INIT_STATE, action: PrescriptionAction) => {\r\n    switch (action.type) {\r\n        case PRESCRIPTION_LIST:\r\n            return { ...state, listloading: true };\r\n        case PRESCRIPTION_LIST_SUCCESS:\r\n            return { ...state, prescription: action.payload, listloading: false, error: null };\r\n        case PRESCRIPTION_LIST_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        case PRESCRIPTION_ADD:\r\n            return { ...state, loading: true };\r\n        case PRESCRIPTION_ADD_SUCCESS:\r\n            return { ...state, prescriptionAdd: action.payload, loading: false, error: null };\r\n        case PRESCRIPTION_ADD_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        case PRESCRIPTION_UPDATE:\r\n            return { ...state, loading: true };\r\n        case PRESCRIPTION_UPDATE_SUCCESS:\r\n            return { ...state, prescriptionUpdate: action.payload, loading: false, error: null };\r\n        case PRESCRIPTION_UPDATE_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        case PRESCRIPTION_DELETE:\r\n            return { ...state, loading: true };\r\n        case PRESCRIPTION_DELETE_SUCCESS:\r\n            return { ...state, prescriptionDelete: action.payload, loading: false, error: null };\r\n        case PRESCRIPTION_DELETE_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default Prescription;\r\n","// @flow\r\nimport {\r\n    CUSTOMER_LIST,\r\n    CUSTOMER_LIST_SUCCESS,\r\n    CUSTOMER_LIST_FAILED,\r\n    CUSTOMER_ADD,\r\n    CUSTOMER_ADD_SUCCESS,\r\n    CUSTOMER_ADD_FAILED,\r\n    CUSTOMER_UPDATE,\r\n    CUSTOMER_UPDATE_SUCCESS,\r\n    CUSTOMER_UPDATE_FAILED,\r\n    CUSTOMER_DELETE,\r\n    CUSTOMER_DELETE_SUCCESS,\r\n    CUSTOMER_DELETE_FAILED\r\n} from './constants';\r\n\r\nimport { getLoggedInUser } from '../../helpers/authUtils';\r\n\r\nconst INIT_STATE = {\r\n    user: getLoggedInUser(),\r\n    loading: false,\r\n};\r\n\r\ntype CustomerAction = { type: string, payload: {} | string };\r\ntype State = { user?: {} | null, loading?: boolean, +value ?: boolean };\r\n\r\nconst Customer = (state: State = INIT_STATE, action: CustomerAction) => {\r\n    switch (action.type) {\r\n        case CUSTOMER_LIST:\r\n            return { ...state, listloading: true };\r\n        case CUSTOMER_LIST_SUCCESS:\r\n            return { ...state, customer: action.payload, listloading: false, error: null };\r\n        case CUSTOMER_LIST_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        case CUSTOMER_ADD:\r\n            return { ...state, loading: true };\r\n        case CUSTOMER_ADD_SUCCESS:\r\n            return { ...state, customerAdd: action.payload, loading: false, error: null };\r\n        case CUSTOMER_ADD_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        case CUSTOMER_UPDATE:\r\n            return { ...state, loading: true };\r\n        case CUSTOMER_UPDATE_SUCCESS:\r\n            return { ...state, customerUpdate: action.payload, loading: false, error: null };\r\n        case CUSTOMER_UPDATE_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        case CUSTOMER_DELETE:\r\n            return { ...state, loading: true };\r\n        case CUSTOMER_DELETE_SUCCESS:\r\n            return { ...state, customerDelete: action.payload, loading: false, error: null };\r\n        case CUSTOMER_DELETE_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default Customer;\r\n","// @flow\n\nimport { combineReducers } from 'redux';\nimport Layout from './layout/reducers';\nimport Auth from './auth/reducers';\nimport AppMenu from './appMenu/reducers';\nimport Prescription from './prescription/reducers';\nimport Customer from './customer/reducers';\n\nexport default combineReducers({\n    Auth,\n    AppMenu,\n    Layout,\n    Prescription,\n    Customer\n});\n","import axios from 'axios';\r\nimport { isUserAuthenticated, getLoggedInUser } from '../helpers/authUtils';\r\nimport { API_BASE_URL } from './hostSetting';\r\n\r\nexport const ApiCall = (options) => {\r\n    const loggedInuser = getLoggedInUser();\r\n    var new_options = { ...options };\r\n\r\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\r\n        let host = window.location.host;\r\n        let parts = host.split(\".\");\r\n        if (parts.length >= 2) {\r\n            let old_url = new_options.url;\r\n            let new_url = old_url.replace(\"app\", parts[0]);\r\n            new_options.url = new_url;\r\n        }\r\n    }\r\n    return axios(new_options).then((response) => response);\r\n};\r\n","import { API_BASE_URL } from \"./hostSetting\";\r\n\r\nconst baseUrl = API_BASE_URL;\r\n\r\n\r\nexport const endpoints = {\r\n  hostUrl: baseUrl,\r\n  loginUrl: `${baseUrl}/auth/login`,\r\n  registerUrl: `${baseUrl}/auth/register`,\r\n  prescriptionList: `${baseUrl}/prescription/list`,\r\n  customerList: `${baseUrl}/customer/list`,\r\n  };","// @flow\r\nimport { Cookies } from 'react-cookie';\r\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\n\r\n\r\nimport { ApiCall } from '../../services/index';\r\nimport { endpoints } from '../../services/endpoints';\r\nimport { LOGIN_USER, LOGOUT_USER, REGISTER_USER,  } from './constants';\r\n\r\nimport {\r\n    loginUserSuccess,\r\n    loginUserFailed,\r\n    registerUserSuccess,\r\n    registerUserFailed,\r\n\r\n} from './actions';\r\n\r\n/**\r\n * Sets the session\r\n * @param {*} user\r\n */\r\n const setSession = user => {\r\n    if (user) {\r\n        let cookies = new Cookies();\r\n        cookies.set('user', JSON.stringify(user), { path: '/' });\r\n    } else {\r\n        let cookies = new Cookies();\r\n        cookies.remove('user', { path: '/' });\r\n    }\r\n\r\n};\r\n/**\r\n * Login the user\r\n * @param {*} payload - username and password\r\n */\r\n function* login({ payload: { username, password } }) {\r\n   \r\n    let sendData = {};\r\n    sendData.email = username;\r\n    sendData.password = password;\r\n\r\n    const options = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n           \r\n        },\r\n        method: 'POST',\r\n        url: endpoints.loginUrl,\r\n        data: sendData\r\n    };\r\n\r\n    try {\r\n        const response = yield call(ApiCall, options); \r\n        \r\n       \r\n        if (response.data.status === 'success')   {  \r\n            setSession(response.data.data);   \r\n            yield put(loginUserSuccess(response.data));\r\n            console.log(response,\"1\");\r\n        } else if(response.data.status === 'error') {\r\n            yield put(loginUserFailed(response.data.message));\r\n            console.log(response,\"2\");\r\n        }\r\n\r\n        else {\r\n            console.log(response,\"3\");\r\n            yield put(loginUserFailed(\"Invalid Credentials.\"));   \r\n\r\n        }\r\n    } catch (error) {   \r\n\r\n        let message;\r\n         \r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(loginUserFailed(message));\r\n        setSession(null);\r\n    }\r\n}\r\n\r\n/**\r\n * Logout the user\r\n * @param {*} param0\r\n */\r\nfunction* logout({ payload: { history } }) {\r\n    try {\r\n        setSession(null);\r\n        yield call(() => {\r\n            history.push('/account/login');\r\n        });\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Register the user\r\n */\r\nfunction* register({ payload:data }) {\r\n    const options = {\r\n        headers: { 'Content-Type': 'application/json' },\r\n        method: 'POST',\r\n        url: endpoints.registerUrl,\r\n        data: data\r\n    };\r\n\r\n    try {\r\n        const response = yield call(ApiCall, options);\r\n\r\n       \r\n            yield put(registerUserSuccess(response));\r\n\r\n      \r\n   \r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(registerUserFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchLoginUser(): any {\r\n    yield takeEvery(LOGIN_USER, login);\r\n}\r\n\r\nexport function* watchLogoutUser(): any {\r\n    yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nexport function* watchRegisterUser(): any {\r\n    yield takeEvery(REGISTER_USER, register);\r\n}\r\n\r\n\r\n\r\nfunction* authSaga(): any {\r\n    yield all([fork(watchLoginUser), fork(watchLogoutUser), fork(watchRegisterUser)]);\r\n}\r\n\r\nexport default authSaga;\r\n","// @flow\r\nimport { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\nimport * as layoutConstants from '../../constants';\r\nimport {\r\n    changeLayoutWidth as changeLayoutWidthAction,\r\n    changeSidebarTheme as changeLeftSidebarThemeAction,\r\n    changeSidebarType as changeSidebarTypeAction,\r\n} from './actions';\r\n\r\n/**\r\n * Changes the body attribute\r\n */\r\nfunction changeBodyAttribute(attribute, value) {\r\n    if (document.body) document.body.setAttribute(attribute, value);\r\n    return true;\r\n}\r\n\r\n/**\r\n * Toggle the class on body\r\n * @param {*} cssClass\r\n */\r\nfunction manageBodyClass(cssClass, action = 'toggle') {\r\n    switch (action) {\r\n        case 'add':\r\n            if (document.body) document.body.classList.add(cssClass);\r\n            break;\r\n        case 'remove':\r\n            if (document.body) document.body.classList.remove(cssClass);\r\n            break;\r\n        default:\r\n            if (document.body) document.body.classList.toggle(cssClass);\r\n            break;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * ---------------------------------------------------------------------------------------------------------------------------\r\n * Note: Following are the functions which allows you to save the user prefrences on backend side by making an api request.\r\n * For now, we are just applying the required logic on frontend side\r\n * ----------------------------------------------------------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * Changes the layout type\r\n * @param {*} param0\r\n */\r\nfunction* changeLayout({ payload: layout }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout', layout);\r\n        if (layout === layoutConstants.LAYOUT_VERTICAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_HORIZONTAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_DETACHED) {\r\n            yield put(changeLayoutWidthAction(layoutConstants.LAYOUT_WIDTH_FLUID));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE));\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the layout width\r\n * @param {*} param0\r\n */\r\nfunction* changeLayoutWidth({ payload: width }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout-mode', width);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar theme\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarTheme({ payload: theme }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-leftbar-theme', theme);\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar type\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarType({ payload: type }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-leftbar-compact-mode', type);\r\n    } catch (error) {}\r\n}\r\n\r\n\r\n\r\n/**\r\n * Hides the rightsidebar\r\n */\r\n\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchChangeLayoutType(): any {\r\n    yield takeEvery(CHANGE_LAYOUT, changeLayout);\r\n}\r\n\r\nexport function* watchChangeLayoutWidth(): any {\r\n    yield takeEvery(CHANGE_LAYOUT_WIDTH, changeLayoutWidth);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarTheme(): any {\r\n    yield takeEvery(CHANGE_SIDEBAR_THEME, changeLeftSidebarTheme);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarType(): any {\r\n    yield takeEvery(CHANGE_SIDEBAR_TYPE, changeLeftSidebarType);\r\n}\r\n\r\n\r\n\r\n\r\nfunction* LayoutSaga(): any {\r\n    yield all([\r\n        fork(watchChangeLayoutType),\r\n        fork(watchChangeLayoutWidth),\r\n        fork(watchChangeLeftSidebarTheme),\r\n        fork(watchChangeLeftSidebarType),\r\n        \r\n    ]);\r\n}\r\n\r\nexport default LayoutSaga;\r\n","// @flow\n\nimport MenuItem from './models';\n\n/**\n * Flatten the nested list of menu items\n */\nlet uuid = 1;\n\nconst assignIdAndParent = (menuItems: Array<MenuItem>, parentId?: number) => {\n    menuItems = menuItems || [];\n    menuItems.forEach(item => {\n        const id = item.id || uuid;\n        uuid += 1;\n        item.id = id;\n        item.parentId = item.parentId || parentId;\n        item.active = false;\n\n        if (typeof item.children !== 'undefined') {\n            assignIdAndParent(item.children, id);\n        }\n    });\n};\n\nexport default (menuItems: Array<MenuItem>) => {\n    assignIdAndParent(menuItems);\n    return menuItems;\n};\n","// @flow\r\nimport { all, call, put, fork, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { INIT_MENU, CHANGE_ACTIVE_MENU_FROM_LOCATION } from './constants';\r\nimport { authProtectedRoutes as routes } from '../../routes';\r\nimport assignIds from './utils';\r\nimport { initMenuSuccess, changeActiveMenuFromLocationSuccess } from './actions';\r\n\r\n/**\r\n * Activate menu items from location\r\n * @param {*} menuItems\r\n */\r\nconst getActivatedMenuItemIds = menuItems => {\r\n    var matchingItems = [];\r\n    for (var menuItem of menuItems) {\r\n        if (window.location.pathname.indexOf(menuItem.path) === 0) {\r\n            matchingItems.push(menuItem.id);\r\n        }\r\n\r\n        if (typeof menuItem.children !== 'undefined') {\r\n            matchingItems = [...matchingItems, ...getActivatedMenuItemIds(menuItem.children)];\r\n        }\r\n    }\r\n    return matchingItems;\r\n};\r\n\r\n/**\r\n * Initilizes the menu\r\n */\r\nfunction* initMenuAndItems() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        yield put(initMenuSuccess(menuItems));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * change the active menu item based on location\r\n */\r\nfunction* changeActiveMenuFromLocation() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchMenuInit(): any {\r\n    yield takeEvery(INIT_MENU, initMenuAndItems);\r\n}\r\n\r\nexport function* watchMenuChange(): any {\r\n    yield takeEvery(CHANGE_ACTIVE_MENU_FROM_LOCATION, changeActiveMenuFromLocation);\r\n}\r\n\r\nfunction* appMenuSaga(): any {\r\n    yield all([fork(watchMenuInit), fork(watchMenuChange)]);\r\n}\r\n\r\nexport default appMenuSaga;\r\n","// @flow\r\nimport { Cookies } from 'react-cookie';\r\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { ApiCall } from '../../services/index';\r\nimport { endpoints } from '../../services/endpoints';\r\nimport { toast, ToastContainer, Zoom } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { PRESCRIPTION_LIST, PRESCRIPTION_ADD, PRESCRIPTION_UPDATE, PRESCRIPTION_DELETE } from './constants';\r\n\r\nimport {\r\n    getPrescriptionListSuccess,\r\n    getPrescriptionListFailed,\r\n    getPrescriptionAddSuccess,\r\n    getPrescriptionAddFailed,\r\n    getPrescriptionUpdateSuccess,\r\n    getPrescriptionUpdateFailed,\r\n    getPrescriptionDeleteSuccess,\r\n    getPrescriptionDeleteFailed,\r\n} from './actions';\r\n\r\nimport { getLoggedInUser } from '../../helpers/authUtils';\r\n\r\nconst prescriptionAddedSucsess = () => toast.success('Prescription Added Successfully', { transition: Zoom });\r\nconst prescriptionDeletedSuccess = () => toast.success('Prescription Deleted Successfully', { transition: Zoom });\r\nconst prescriptionUpdated = () => toast.info('Prescription Updated Successfully', { transition: Zoom });\r\nconst emptyAllFields = () => toast.warning('Please Fill All Fields', { transition: Zoom });\r\nconst WarnFields = (msg) => toast.error(msg, { transition: Zoom });\r\n/**\r\n * Login the user\r\n * @param {*} payload - username and password\r\n */\r\nfunction* PrescriptionList() {\r\n    const user = getLoggedInUser();\r\n    let options = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization:  user.token,\r\n        },\r\n        method: 'POST',\r\n        url: endpoints.prescriptionList,\r\n        // data: sendData\r\n    };\r\n\r\n    try {\r\n        const response = yield call(ApiCall, options);\r\n        yield put(getPrescriptionListSuccess(response.data));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                WarnFields(message);\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                WarnFields(message);\r\n                break;\r\n            case 400:\r\n                message = error.response.data && error.response.data.error;\r\n                WarnFields(message);\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getPrescriptionListFailed(message));\r\n    }\r\n}\r\n\r\n// Prescription Add\r\n\r\nfunction* PrescriptionAdd({ payload: data }) {\r\n    const user = getLoggedInUser();\r\n\r\n    let options = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: user.token,\r\n        },\r\n        method: 'POST',\r\n        url: endpoints.prescriptionAdd,\r\n        data: data,\r\n    };\r\n\r\n    try {\r\n        const response = yield call(ApiCall, options);\r\n       if(response.data.code === 422){\r\n        WarnFields(response.data.errors.message);\r\n       } else{\r\n        prescriptionAddedSucsess();\r\n        yield put(getPrescriptionAddSuccess(response.data));\r\n       }\r\n   \r\n       \r\n    } catch (error) {\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                WarnFields(message);\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                WarnFields(message);\r\n                break;\r\n            case 400:\r\n                message = error.response.data && error.response.data.error;\r\n                WarnFields(message);\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getPrescriptionAddFailed(message));\r\n    }\r\n}\r\n\r\n// Prescription Update\r\n\r\nfunction* PrescriptionUpdate({ payload: data }) {\r\n    const user = getLoggedInUser();\r\nlet id = data.id\r\n    let options = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: user.token,\r\n        },\r\n        method: 'POST',\r\n        url: endpoints.prescriptionUpdate + '/' + (id),\r\n        data: data,\r\n    };\r\n\r\n    try {\r\n\r\n        const response = yield call(ApiCall, options);       \r\n        if(response.data.code === 422){\r\n            WarnFields(response.data.errors.message);\r\n           } else{\r\n            yield put(getPrescriptionUpdateSuccess(response.data));\r\n            prescriptionUpdated();\r\n           }\r\n  \r\n    } catch (error) {\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                WarnFields(message);\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                WarnFields(message);\r\n                break;\r\n            case 400:\r\n                message = error.response.data && error.response.data.error;\r\n                WarnFields(message);\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getPrescriptionUpdateFailed(message));\r\n    }\r\n}\r\n\r\n// Prescription Delete\r\n\r\nfunction* PrescriptionDelete({ payload: id }) {\r\n    const user = getLoggedInUser();\r\n\r\n    let options = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: user.token,\r\n        },\r\n        method: 'DELETE',\r\n        url: endpoints.prescriptionDelete + '/' + id,\r\n    };\r\n\r\n    try {\r\n        const response = yield call(ApiCall, options);\r\n        prescriptionDeletedSuccess();\r\n        yield put(getPrescriptionDeleteSuccess(response.data));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                WarnFields(message);\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                WarnFields(message);\r\n                break;\r\n            case 400:\r\n                message = error.response.data && error.response.data.error;\r\n                WarnFields(message);\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getPrescriptionDeleteFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchPrescriptionList(): any {\r\n    yield takeEvery(PRESCRIPTION_LIST, PrescriptionList);\r\n}\r\nexport function* watchPrescriptionAdd(): any {\r\n    yield takeEvery(PRESCRIPTION_ADD, PrescriptionAdd);\r\n}\r\nexport function* watchPrescriptionUpdate(): any {\r\n    yield takeEvery(PRESCRIPTION_UPDATE, PrescriptionUpdate);\r\n}\r\nexport function* watchPrescriptionDelete(): any {\r\n    yield takeEvery(PRESCRIPTION_DELETE, PrescriptionDelete);\r\n}\r\n\r\nfunction* authSaga(): any {\r\n    yield all([\r\n        fork(watchPrescriptionList),\r\n        fork(watchPrescriptionAdd),\r\n        fork(watchPrescriptionUpdate),\r\n        fork(watchPrescriptionDelete),\r\n    ]);\r\n}\r\n\r\nexport default authSaga;\r\n","// @flow\r\nimport { Cookies } from 'react-cookie';\r\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\n\r\n\r\nimport { ApiCall } from '../../services/index';\r\nimport { endpoints } from '../../services/endpoints';\r\nimport { toast, ToastContainer, Zoom } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { CUSTOMER_LIST, CUSTOMER_ADD, CUSTOMER_UPDATE, CUSTOMER_DELETE } from './constants';\r\n\r\nimport {\r\n    getCustomerListSuccess,\r\n    getCustomerListFailed,\r\n    getCustomerAddSuccess,\r\n    getCustomerAddFailed,\r\n    getCustomerUpdateSuccess,\r\n    getCustomerUpdateFailed,\r\n    getCustomerDeleteSuccess,\r\n    getCustomerDeleteFailed,\r\n} from './actions';\r\n\r\nimport { getLoggedInUser } from '../../helpers/authUtils';\r\n\r\nconst customerAddedSucsess = () => toast.success('Customer Added Successfully', { transition: Zoom });\r\nconst customerDeletedSuccess = () => toast.success('Customer Deleted Successfully', { transition: Zoom });\r\nconst customerUpdated = () => toast.info('Customer Updated Successfully', { transition: Zoom });\r\nconst emptyAllFields = () => toast.warning('Please Fill All Fields', { transition: Zoom });\r\nconst WarnFields = (msg) => toast.error(msg, { transition: Zoom });\r\n/**\r\n * Login the user\r\n * @param {*} payload - username and password\r\n */\r\nfunction* CustomerList() {\r\n    const user = getLoggedInUser();\r\n    let options = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization:  user.token,\r\n        },\r\n        method: 'GET',\r\n        url: endpoints.customerList,\r\n        // data: sendData\r\n    };\r\n\r\n    try {\r\n        const response = yield call(ApiCall, options);\r\n        yield put(getCustomerListSuccess(response.data));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                WarnFields(message);\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                WarnFields(message);\r\n                break;\r\n            case 400:\r\n                message = error.response.data && error.response.data.error;\r\n                WarnFields(message);\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getCustomerListFailed(message));\r\n    }\r\n}\r\n\r\n// Customer Add\r\n\r\nfunction* CustomerAdd({ payload: data }) {\r\n    const user = getLoggedInUser();\r\n\r\n    let options = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: user.token,\r\n        },\r\n        method: 'POST',\r\n        url: endpoints.customerAdd,\r\n        data: data,\r\n    };\r\n\r\n    try {\r\n        const response = yield call(ApiCall, options);\r\n       if(response.data.code === 422){\r\n        WarnFields(response.data.errors.message);\r\n       } else{\r\n        customerAddedSucsess();\r\n        yield put(getCustomerAddSuccess(response.data));\r\n       }\r\n   \r\n       \r\n    } catch (error) {\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                WarnFields(message);\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                WarnFields(message);\r\n                break;\r\n            case 400:\r\n                message = error.response.data && error.response.data.error;\r\n                WarnFields(message);\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getCustomerAddFailed(message));\r\n    }\r\n}\r\n\r\n// Customer Update\r\n\r\nfunction* CustomerUpdate({ payload: data }) {\r\n    const user = getLoggedInUser();\r\nlet id = data.id\r\n    let options = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: user.token,\r\n        },\r\n        method: 'POST',\r\n        url: endpoints.customerUpdate + '/' + (id),\r\n        data: data,\r\n    };\r\n\r\n    try {\r\n\r\n        const response = yield call(ApiCall, options);       \r\n        if(response.data.code === 422){\r\n            WarnFields(response.data.errors.message);\r\n           } else{\r\n            yield put(getCustomerUpdateSuccess(response.data));\r\n            customerUpdated();\r\n           }\r\n  \r\n    } catch (error) {\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                WarnFields(message);\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                WarnFields(message);\r\n                break;\r\n            case 400:\r\n                message = error.response.data && error.response.data.error;\r\n                WarnFields(message);\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getCustomerUpdateFailed(message));\r\n    }\r\n}\r\n\r\n// Customer Delete\r\n\r\nfunction* CustomerDelete({ payload: id }) {\r\n    const user = getLoggedInUser();\r\n\r\n    let options = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: user.token,\r\n        },\r\n        method: 'DELETE',\r\n        url: endpoints.customerDelete + '/' + id,\r\n    };\r\n\r\n    try {\r\n        const response = yield call(ApiCall, options);\r\n        customerDeletedSuccess();\r\n        yield put(getCustomerDeleteSuccess(response.data));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.response.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                WarnFields(message);\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                WarnFields(message);\r\n                break;\r\n            case 400:\r\n                message = error.response.data && error.response.data.error;\r\n                WarnFields(message);\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(getCustomerDeleteFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchCustomerList(): any {\r\n    yield takeEvery(CUSTOMER_LIST, CustomerList);\r\n}\r\nexport function* watchCustomerAdd(): any {\r\n    yield takeEvery(CUSTOMER_ADD, CustomerAdd);\r\n}\r\nexport function* watchCustomerUpdate(): any {\r\n    yield takeEvery(CUSTOMER_UPDATE, CustomerUpdate);\r\n}\r\nexport function* watchCustomerDelete(): any {\r\n    yield takeEvery(CUSTOMER_DELETE, CustomerDelete);\r\n}\r\n\r\nfunction* authSaga(): any {\r\n    yield all([\r\n        fork(watchCustomerList),\r\n        fork(watchCustomerAdd),\r\n        fork(watchCustomerUpdate),\r\n        fork(watchCustomerDelete),\r\n    ]);\r\n}\r\n\r\nexport default authSaga;\r\n","// @flow\nimport { all } from 'redux-saga/effects';\nimport authSaga from './auth/saga';\nimport layoutSaga from './layout/saga';\nimport appMenuSaga from './appMenu/saga';\nimport prescriptionSaga from './prescription/saga';\nimport customerSaga from './customer/saga';\n\nexport default function* rootSaga(getState: any): any {\n    yield all([authSaga(), layoutSaga(), appMenuSaga(), prescriptionSaga(),customerSaga()]);\n}\n","// @flow\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './reducers';\nimport sagas from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nexport function configureStore(initialState: {}) {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n    const store = createStore(reducers, initialState, composeEnhancers(applyMiddleware(...middlewares)));\n    sagaMiddleware.run(sagas);\n    return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { configureStore } from './redux/store';\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n","\nimport jwtDecode from 'jwt-decode';\nimport { Cookies } from 'react-cookie';\n\nconst isUserAuthenticated = () => {\n    const user = getLoggedInUser();\n    if (!user) {\n        return false;\n    }\n    const decoded = jwtDecode(user.token);\n    const currentTime = Date.now() / 1000;\n    if (decoded.exp < currentTime) {\n        console.warn('access token expired');\n        return false;\n    } else {\n        return true;\n    }\n};\n\n\nconst getLoggedInUser = () => {\n    const cookies = new Cookies();\n    const user = cookies.get('user');\n    return user ? (typeof user == 'object' ? user : JSON.parse(user)) : null;\n};\n\nexport { isUserAuthenticated, getLoggedInUser };\n","/* AUTH */\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\nexport const REGISTER_USER = 'REGISTER_USER';\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED';\nexport const LOGOUT_USER = 'LOGOUT_USER';\n\n","/* LAYOUT */\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\nexport const CHANGE_LAYOUT_WIDTH = 'CHANGE_LAYOUT_WIDTH';\nexport const CHANGE_SIDEBAR_THEME = 'CHANGE_SIDEBAR_THEME';\nexport const CHANGE_SIDEBAR_TYPE = 'CHANGE_SIDEBAR_TYPE';\n\n/* RIGHT SIDEBAR */\nexport const TOGGLE_RIGHT_SIDEBAR = 'TOGGLE_RIGHT_SIDEBAR';\nexport const SHOW_RIGHT_SIDEBAR = 'SHOW_RIGHT_SIDEBAR';\nexport const HIDE_RIGHT_SIDEBAR = 'HIDE_RIGHT_SIDEBAR';\n","/* APP MENU */\nexport const INIT_MENU = 'INIT_MENU';\nexport const INIT_MENU_SUCCESS = 'INIT_MENU_SUCCESS';\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION = 'CHANGE_ACTIVE_MENU_FROM_LOCATION';\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS = 'CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS';\n","// @flow\r\nimport {\r\n    PRESCRIPTION_LIST,\r\n    PRESCRIPTION_LIST_SUCCESS,\r\n    PRESCRIPTION_LIST_FAILED,\r\n    PRESCRIPTION_ADD,\r\n    PRESCRIPTION_ADD_SUCCESS,\r\n    PRESCRIPTION_ADD_FAILED,\r\n    PRESCRIPTION_UPDATE,\r\n    PRESCRIPTION_UPDATE_SUCCESS,\r\n    PRESCRIPTION_UPDATE_FAILED,\r\n    PRESCRIPTION_DELETE,\r\n    PRESCRIPTION_DELETE_SUCCESS,\r\n    PRESCRIPTION_DELETE_FAILED\r\n} from './constants';\r\n\r\ntype PrescriptionAction = { type: string, payload: {} | string };\r\n\r\nexport const getPrescriptionList = (): PrescriptionAction => ({\r\n    type: PRESCRIPTION_LIST,\r\n    payload: {},\r\n});\r\n\r\nexport const getPrescriptionListSuccess = (prescription: string): PrescriptionAction => ({\r\n    type: PRESCRIPTION_LIST_SUCCESS,\r\n    payload: prescription,\r\n});\r\n\r\nexport const getPrescriptionListFailed = (error: string): PrescriptionAction => ({\r\n    type: PRESCRIPTION_LIST_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const getPrescriptionAdd = (data:{}): PrescriptionAction => ({\r\n    type: PRESCRIPTION_ADD,\r\n    payload: data,\r\n});\r\n\r\nexport const getPrescriptionAddSuccess = (prescriptionAdd: string): PrescriptionAction => ({\r\n    type: PRESCRIPTION_ADD_SUCCESS,\r\n    payload: prescriptionAdd,\r\n});\r\n\r\nexport const getPrescriptionAddFailed = (error: string): PrescriptionAction => ({\r\n    type: PRESCRIPTION_ADD_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const getPrescriptionUpdate = (data:{}): PrescriptionAction => ({\r\n    type: PRESCRIPTION_UPDATE,\r\n    payload: data,\r\n});\r\n\r\nexport const getPrescriptionUpdateSuccess = (prescriptionUpdate: string): PrescriptionAction => ({\r\n    type: PRESCRIPTION_UPDATE_SUCCESS,\r\n    payload: prescriptionUpdate,\r\n});\r\n\r\nexport const getPrescriptionUpdateFailed = (error: string): PrescriptionAction => ({\r\n    type: PRESCRIPTION_UPDATE_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const getPrescriptionDelete = (id): PrescriptionAction => ({\r\n    type: PRESCRIPTION_DELETE,\r\n    payload: id,\r\n});\r\n\r\nexport const getPrescriptionDeleteSuccess = (prescriptionDelete: string): PrescriptionAction => ({\r\n    type: PRESCRIPTION_DELETE_SUCCESS,\r\n    payload: prescriptionDelete,\r\n});\r\n\r\nexport const getPrescriptionDeleteFailed = (error: string): PrescriptionAction => ({\r\n    type: PRESCRIPTION_DELETE_FAILED,\r\n    payload: error,\r\n});\r\n","// @flow\r\nimport {\r\n    CUSTOMER_LIST,\r\n    CUSTOMER_LIST_SUCCESS,\r\n    CUSTOMER_LIST_FAILED,\r\n    CUSTOMER_ADD,\r\n    CUSTOMER_ADD_SUCCESS,\r\n    CUSTOMER_ADD_FAILED,\r\n    CUSTOMER_UPDATE,\r\n    CUSTOMER_UPDATE_SUCCESS,\r\n    CUSTOMER_UPDATE_FAILED,\r\n    CUSTOMER_DELETE,\r\n    CUSTOMER_DELETE_SUCCESS,\r\n    CUSTOMER_DELETE_FAILED\r\n} from './constants';\r\n\r\ntype CustomerAction = { type: string, payload: {} | string };\r\n\r\nexport const getCustomerList = (): CustomerAction => ({\r\n    type: CUSTOMER_LIST,\r\n    payload: {},\r\n});\r\n\r\nexport const getCustomerListSuccess = (customer: string): CustomerAction => ({\r\n    type: CUSTOMER_LIST_SUCCESS,\r\n    payload: customer,\r\n});\r\n\r\nexport const getCustomerListFailed = (error: string): CustomerAction => ({\r\n    type: CUSTOMER_LIST_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const getCustomerAdd = (data:{}): CustomerAction => ({\r\n    type: CUSTOMER_ADD,\r\n    payload: data,\r\n});\r\n\r\nexport const getCustomerAddSuccess = (customerAdd: string): CustomerAction => ({\r\n    type: CUSTOMER_ADD_SUCCESS,\r\n    payload: customerAdd,\r\n});\r\n\r\nexport const getCustomerAddFailed = (error: string): CustomerAction => ({\r\n    type: CUSTOMER_ADD_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const getCustomerUpdate = (data:{}): CustomerAction => ({\r\n    type: CUSTOMER_UPDATE,\r\n    payload: data,\r\n});\r\n\r\nexport const getCustomerUpdateSuccess = (customerUpdate: string): CustomerAction => ({\r\n    type: CUSTOMER_UPDATE_SUCCESS,\r\n    payload: customerUpdate,\r\n});\r\n\r\nexport const getCustomerUpdateFailed = (error: string): CustomerAction => ({\r\n    type: CUSTOMER_UPDATE_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const getCustomerDelete = (id): CustomerAction => ({\r\n    type: CUSTOMER_DELETE,\r\n    payload: id,\r\n});\r\n\r\nexport const getCustomerDeleteSuccess = (customerDelete: string): CustomerAction => ({\r\n    type: CUSTOMER_DELETE_SUCCESS,\r\n    payload: customerDelete,\r\n});\r\n\r\nexport const getCustomerDeleteFailed = (error: string): CustomerAction => ({\r\n    type: CUSTOMER_DELETE_FAILED,\r\n    payload: error,\r\n});\r\n","// @flow\nimport {\n    CHANGE_LAYOUT,\n    CHANGE_LAYOUT_WIDTH,\n    CHANGE_SIDEBAR_THEME,\n    CHANGE_SIDEBAR_TYPE,\n    TOGGLE_RIGHT_SIDEBAR,\n    SHOW_RIGHT_SIDEBAR,\n    HIDE_RIGHT_SIDEBAR,\n} from './constants';\n\ntype LayoutAction = { type: string, payload?: string | null };\n\nexport const changeLayout = (layout: string): LayoutAction => ({\n    type: CHANGE_LAYOUT,\n    payload: layout,\n});\n\nexport const changeLayoutWidth = (width: string): LayoutAction => ({\n    type: CHANGE_LAYOUT_WIDTH,\n    payload: width,\n});\n\nexport const changeSidebarTheme = (theme: string): LayoutAction => ({\n    type: CHANGE_SIDEBAR_THEME,\n    payload: theme,\n});\n\nexport const changeSidebarType = (sidebarType: string): LayoutAction => ({\n    type: CHANGE_SIDEBAR_TYPE,\n    payload: sidebarType,\n});\n\n\n","// @flow\nimport {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n\n} from './constants';\n\ntype AuthAction = { type: string, payload: {} | string };\n\nexport const loginUser = (username: string, password: string): AuthAction => ({\n    type: LOGIN_USER,\n    payload: { username, password },\n});\n\nexport const loginUserSuccess = (user: string): AuthAction => ({\n    type: LOGIN_USER_SUCCESS,\n    payload: user,\n});\n\nexport const loginUserFailed = (error: string): AuthAction => ({\n    type: LOGIN_USER_FAILED,\n    payload: error,\n});\n\nexport const registerUser = (fullname: string, email: string, password: string): AuthAction => ({\n    type: REGISTER_USER,\n    payload: { fullname, email, password },\n});\n\nexport const registerUserSuccess = (user: {}): AuthAction => ({\n    type: REGISTER_USER_SUCCESS,\n    payload: user,\n});\n\nexport const registerUserFailed = (error: string): AuthAction => ({\n    type: REGISTER_USER_FAILED,\n    payload: error,\n});\n\nexport const logoutUser = (history: any): AuthAction => ({\n    type: LOGOUT_USER,\n    payload: { history },\n});\n\n","export * from './auth/actions';\nexport * from './layout/actions';\nexport * from './appMenu/actions';\nexport * from './prescription/actions';\nexport * from './customer/actions';\n","// @flow\nimport {\n    INIT_MENU,\n    INIT_MENU_SUCCESS,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n} from './constants';\n\ntype DefaultMenuAction = { type: string, payload: {} };\n\nexport const initMenu = (): DefaultMenuAction => ({\n    type: INIT_MENU,\n    payload: {},\n});\n\nexport const initMenuSuccess = (menuItems: Array<{}>): DefaultMenuAction => ({\n    type: INIT_MENU_SUCCESS,\n    payload: { menuItems },\n});\n\nexport const changeActiveMenuFromLocation = (): DefaultMenuAction => ({\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    payload: {},\n});\n\nexport const changeActiveMenuFromLocationSuccess = (activatedMenuItemIds: Array<string>): DefaultMenuAction => ({\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n    payload: { activatedMenuItemIds },\n});\n","var url = '';\r\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\r\n    url = \"http://ant.indiapromise.ooo\";\r\n} else {\r\n    url = \"http://ant.indiapromise.ooo\";\r\n}\r\n\r\nexport const API_BASE_URL = url;\r\n","/* PRESCRIPTION */\r\nexport const PRESCRIPTION_LIST = 'PRESCRIPTION_LIST';\r\nexport const PRESCRIPTION_LIST_SUCCESS = 'PRESCRIPTION_LIST_SUCCESS';\r\nexport const PRESCRIPTION_LIST_FAILED = 'PRESCRIPTION_LIST_FAILED';\r\n\r\nexport const PRESCRIPTION_ADD = 'PRESCRIPTION_ADD';\r\nexport const PRESCRIPTION_ADD_SUCCESS = 'PRESCRIPTION_ADD_SUCCESS';\r\nexport const PRESCRIPTION_ADD_FAILED = 'PRESCRIPTIONADD_ADD_FAILED';\r\n\r\nexport const PRESCRIPTION_UPDATE = 'PRESCRIPTION_UPDATE';\r\nexport const PRESCRIPTION_UPDATE_SUCCESS = 'PRESCRIPTION_UPDATE_SUCCESS';\r\nexport const PRESCRIPTION_UPDATE_FAILED = 'PRESCRIPTION_UPDATE_FAILED';\r\n\r\nexport const PRESCRIPTION_DELETE = 'PRESCRIPTION_DELETE';\r\nexport const PRESCRIPTION_DELETE_SUCCESS = 'PRESCRIPTION_DELETE_SUCCESS';\r\nexport const PRESCRIPTION_DELETE_FAILED = 'PRESCRIPTIONADD_DELETE_FAILED';\r\n"],"sourceRoot":""}