{"version":3,"sources":["assets/images/sndklogo.png","assets/images/avatar-blue.png","components/AppMenu.js","assets/images/help-icon.svg","components/LeftSidebar.js"],"names":["module","exports","MenuItemWithChildren","item","linkClassNames","subMenuClassNames","activatedMenuItemIds","className","classNames","indexOf","id","active","to","aria-expanded","icon","badge","variant","text","name","children","map","child","i","Fragment","key","MenuItem","linkClassName","MenuItemLink","path","AppMenu","menuRef","openedMenuItems","componentDidMount","props","menu","menuItems","initMenu","history","listen","location","action","document","body","classList","remove","length","el","hide","changeActiveMenuFromLocation","componentDidUpdate","prevProps","this","mode","MetisMenu","on","event","push","detail","shownElement","window","addEventListener","menuClick","e","target","contains","removeEventListener","isHorizontal","activatedKeys","defaultDisplayedItems","screen","width","displayedItems","slice","otherItems","header","Component","defaultProps","withRouter","connect","state","SideBarContent","hideUserProfile","menuClickHandler","isLight","src","profileImg","alt","height","LeftSidebar","handleOtherClick","componentWillUnmount","menuNodeRef","handleClick","bind","console","log","isCondensed","hideLogo","ref","node","logoDark","logoSm","style","maxHeight","timeout","scrollbarMaxSize"],"mappings":"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","file":"static/js/8.fd286558.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sndklogo.96ac54ca.png\";","module.exports = __webpack_public_path__ + \"static/media/avatar-blue.012f59bd.png\";","// @flow\r\nimport React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport MetisMenu from 'metismenujs/dist/metismenujs';\r\n\r\nimport { initMenu, changeActiveMenuFromLocation } from '../redux/actions';\r\n\r\nconst MenuItemWithChildren = ({ item, linkClassNames, subMenuClassNames, activatedMenuItemIds }) => {\r\n    return (\r\n        <li\r\n            className={classNames('side-nav-item', {\r\n                'mm-active': activatedMenuItemIds.indexOf(item.id) >= 0,\r\n                active: activatedMenuItemIds.indexOf(item.id) >= 0,\r\n            })}>\r\n            <Link\r\n                to=\"#\"\r\n                className={classNames('has-arrow', 'side-sub-nav-link', linkClassNames)}\r\n                aria-expanded={activatedMenuItemIds.indexOf(item.id) >= 0}>\r\n                {item.icon && <i className={item.icon}></i>}\r\n                {item.badge && (\r\n                    <span className={`badge badge-${item.badge.variant} float-right`}>{item.badge.text}</span>\r\n                )}\r\n                <span> {item.name} </span>\r\n            </Link>\r\n\r\n            <ul\r\n                className={classNames(subMenuClassNames, 'mm-collapse', {\r\n                    'mm-collapsed mm-show': activatedMenuItemIds.indexOf(item.id) >= 0,\r\n                })}\r\n                aria-expanded={activatedMenuItemIds.indexOf(item.id) >= 0}>\r\n                {item.children.map((child, i) => {\r\n                    return (\r\n                        <React.Fragment key={i}>\r\n                            {child.children ? (\r\n                                <MenuItemWithChildren\r\n                                    item={child}\r\n                                    linkClassNames=\"\"\r\n                                    activatedMenuItemIds={activatedMenuItemIds}\r\n                                    subMenuClassNames=\"side-nav-third-level\"\r\n                                />\r\n                            ) : (\r\n                                <MenuItem\r\n                                    item={child}\r\n                                    className={classNames({ 'mm-active': activatedMenuItemIds.indexOf(child.id) >= 0 })}\r\n                                    linkClassName=\"\"\r\n                                />\r\n                            )}\r\n                        </React.Fragment>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </li>\r\n    );\r\n};\r\n\r\nconst MenuItem = ({ item, className, linkClassName }) => {\r\n    return (\r\n        <li className={classNames('side-nav-item', className)}>\r\n            <MenuItemLink item={item} className={linkClassName} />\r\n        </li>\r\n    );\r\n};\r\n\r\nconst MenuItemLink = ({ item, className }) => {\r\n    return (\r\n        <Link to={item.path} className={classNames('side-nav-link-ref', 'side-sub-nav-link', className)}>\r\n            {item.icon && <i className={item.icon}></i>}\r\n            {item.badge && <span className={`badge badge-${item.badge.variant} float-right`}>{item.badge.text}</span>}\r\n            <span> {item.name} </span>\r\n        </Link>\r\n    );\r\n};\r\n\r\n/**\r\n * Renders the application menu\r\n */\r\ntype Props = {\r\n    initMenu: PropTypes.func,\r\n    changeActiveMenuFromLocation: PropTypes.func,\r\n    menu: PropTypes.object,\r\n    mode: string,\r\n    history: PropTypes.object,\r\n};\r\nclass AppMenu extends Component<Props> {\r\n    menuRef = null;\r\n    openedMenuItems = [];\r\n\r\n    static defaultProps = {\r\n        mode: 'vertical',\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        if (!this.props.menu.menuItems) this.props.initMenu();\r\n        else this.initMenu();\r\n\r\n        this.props.history.listen((location, action) => {\r\n            // hide menus in mobile\r\n            if (document.body) {\r\n                document.body.classList.remove('sidebar-enable');\r\n            }\r\n\r\n            if (this.menuRef && this.openedMenuItems && this.openedMenuItems.length) {\r\n                for (const el of this.openedMenuItems) {\r\n                    this.menuRef.hide(el);\r\n                }\r\n                this.openedMenuItems = [];\r\n            }\r\n            this.props.changeActiveMenuFromLocation();\r\n        });\r\n    };\r\n\r\n    componentDidUpdate = prevProps => {\r\n        if (\r\n            !prevProps.menu.menuItems ||\r\n            (prevProps.menu.menuItems && prevProps.menu.menuItems !== this.props.menu.menuItems)\r\n        ) {\r\n            this.initMenu();\r\n        }\r\n\r\n        if (!this.props.menu.activatedMenuItemIds) {\r\n            this.props.changeActiveMenuFromLocation();\r\n        }\r\n    };\r\n\r\n    initMenu() {\r\n        if (this.props.mode === 'horizontal') {\r\n            const menuRef = new MetisMenu('#menu-bar').on('shown.metisMenu', event => {\r\n                this.openedMenuItems.push(event.detail.shownElement);\r\n                const menuClick = e => {\r\n                    if (!event.target.contains(e.target)) {\r\n                        menuRef.hide(event.detail.shownElement);\r\n                        window.removeEventListener('click', menuClick);\r\n                    }\r\n                };\r\n                window.addEventListener('click', menuClick);\r\n            });\r\n            this.menuRef = menuRef;\r\n        } else {\r\n            this.menuRef = new MetisMenu('#menu-bar');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const isHorizontal = this.props.mode === 'horizontal';\r\n        var activatedKeys = isHorizontal\r\n            ? []\r\n            : this.props.menu\r\n            ? this.props.menu.activatedMenuItemIds\r\n                ? this.props.menu.activatedMenuItemIds\r\n                : []\r\n            : [] || [];\r\n\r\n        /**\r\n         * Horizontal layout - We are controlling how many menu items can be displayed in it\r\n         */\r\n        let menuItems = this.props.menu && this.props.menu.menuItems ? this.props.menu.menuItems : [];\r\n        const defaultDisplayedItems = window.screen.width > 1366 ? 7 : 5;\r\n\r\n        if (isHorizontal && menuItems.length > defaultDisplayedItems) {\r\n            const displayedItems = menuItems.slice(0, defaultDisplayedItems);\r\n            const otherItems = {\r\n                id: menuItems.length + 1,\r\n                path: '/',\r\n                name: 'More',\r\n                icon: 'uil-ellipsis-h',\r\n                children: menuItems.slice(7, menuItems.length),\r\n            };\r\n            menuItems = [...displayedItems, otherItems];\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className={classNames({ 'topbar-nav': isHorizontal })}>\r\n                    {this.props.menu && menuItems && menuItems.length ? (\r\n                        <ul className=\"metismenu side-nav\" id=\"menu-bar\">\r\n                            {menuItems.map((item, i) => {\r\n                                return (\r\n                                    <React.Fragment key={item.id}>\r\n                                        <React.Fragment>\r\n                                            {item.header && !isHorizontal && (\r\n                                                <li className=\"side-nav-title side-nav-item\" key={i + '-el'}>\r\n                                                    {item.header}\r\n                                                </li>\r\n                                            )}\r\n\r\n                                            {item.children ? (\r\n                                                <MenuItemWithChildren\r\n                                                    item={item}\r\n                                                    subMenuClassNames=\"side-nav-second-level\"\r\n                                                    activatedMenuItemIds={activatedKeys}\r\n                                                    linkClassNames=\"side-nav-link\"\r\n                                                />\r\n                                            ) : (\r\n                                                <MenuItem\r\n                                                    item={item}\r\n                                                    className={classNames({\r\n                                                        'mm-active': activatedKeys.indexOf(item.id) >= 0,\r\n                                                    })}\r\n                                                    linkClassName=\"side-nav-link\"\r\n                                                />\r\n                                            )}\r\n                                        </React.Fragment>\r\n                                    </React.Fragment>\r\n                                );\r\n                            })}\r\n                        </ul>\r\n                    ) : null}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        menu: state.AppMenu,\r\n    };\r\n};\r\nexport default withRouter(\r\n    connect(\r\n        mapStateToProps,\r\n        { initMenu, changeActiveMenuFromLocation }\r\n    )(AppMenu)\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/help-icon.093c349c.svg\";","// @flow\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport SimpleBar from 'simplebar-react';\r\n\r\nimport logoSm from '../assets/images/sndklogo.png';\r\nimport logoDark from '../assets/images/sndklogo.png';\r\nimport logoDarkSm from '../assets/images/sndklogo.png';\r\nimport logo from '../assets/images/sndklogo.png';\r\nimport helpBoxImage from '../assets/images/help-icon.svg';\r\nimport profileImg from '../assets/images/avatar-blue.png';\r\n\r\nimport AppMenu from './AppMenu';\r\n\r\ntype SideBarContentProps = {\r\n    menuClickHandler?: {},\r\n    isLight: boolean,\r\n    hideUserProfile: boolean,\r\n};\r\n\r\nconst SideBarContent = ({ hideUserProfile, isLight, menuClickHandler }: SideBarContentProps) => {\r\n    return (\r\n        <React.Fragment>\r\n\r\n            {!hideUserProfile && (\r\n                <div className=\"leftbar-user\">\r\n                    <Link to=\"/\">\r\n                        <img src={profileImg} alt=\"\" height=\"42\" className=\"rounded-circle shadow-sm\" />\r\n                        <span className=\"leftbar-user-name\">Dominic Keller</span>\r\n                    </Link>\r\n                </div>\r\n            )}\r\n\r\n            <AppMenu menuClickHandler={menuClickHandler} />\r\n\r\n           \r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\ntype LeftSidebarProps = {\r\n    menuClickHandler?: {},\r\n    hideLogo?: boolean,\r\n    hideUserProfile?: boolean,\r\n    isLight?: boolean,\r\n    isCondensed: boolean,\r\n};\r\n\r\nclass LeftSidebar extends Component<LeftSidebarProps> {\r\n    menuNodeRef: any;\r\n\r\n    constructor(props: LeftSidebarProps) {\r\n        super(props);\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleOtherClick = this.handleOtherClick.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Bind event\r\n     */\r\n    componentDidMount = () => {\r\n        document.addEventListener('mousedown', this.handleOtherClick, false);\r\n    };\r\n\r\n    /**\r\n     * Bind event\r\n     */\r\n    componentWillUnmount = () => {\r\n        document.removeEventListener('mousedown', this.handleOtherClick, false);\r\n    };\r\n\r\n    /**\r\n     * Handle the click anywhere in doc\r\n     */\r\n    handleOtherClick = (e: any) => {\r\n        if (this.menuNodeRef.contains(e.target)) return;\r\n        // else hide the menubar\r\n        if (document.body) {\r\n            document.body.classList.remove('sidebar-enable');\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle click\r\n     * @param {*} e\r\n     * @param {*} item\r\n     */\r\n    /*:: handleClick: () => void */\r\n    handleClick(e: {}) {\r\n        console.log(e);\r\n    }\r\n\r\n    render() {\r\n        const isCondensed = this.props.isCondensed || false;\r\n        const isLight = this.props.isLight || false;\r\n        const hideLogo = this.props.hideLogo || false;\r\n        const hideUserProfile = this.props.hideUserProfile || false;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"left-side-menu\" ref={node => (this.menuNodeRef = node)}>\r\n                    {!hideLogo && (<React.Fragment>\r\n                        <Link to=\"/\" className=\"logo text-center logo-light\">\r\n                            <span className=\"logo-lg\">\r\n                                <img src={isLight ? logoDark : logo} alt=\"logo\" height=\"50\" />\r\n                            </span>\r\n                            <span className=\"logo-sm\">\r\n                                <img src={isLight ? logoSm : logoDarkSm} alt=\"logo\" height=\"20\" />\r\n                            </span>\r\n                        </Link>\r\n\r\n                        <Link to=\"/\" className=\"logo text-center logo-dark\">\r\n                            <span className=\"logo-lg\">\r\n                                <img src={isLight ? logoDark : logo} alt=\"logo\" height=\"50\" />\r\n                            </span>\r\n                            <span className=\"logo-sm\">\r\n                                <img src={isLight ? logoSm : logoDarkSm} alt=\"logo\" height=\"20\" />\r\n                            </span>\r\n                        </Link>\r\n                    </React.Fragment>\r\n                    )}\r\n\r\n                    {!isCondensed && (\r\n                        <SimpleBar style={{ maxHeight: '100%' }} timeout={500} scrollbarMaxSize={320}>\r\n                            <SideBarContent\r\n                                menuClickHandler={this.handleClick}\r\n                                isLight={isLight}\r\n                                hideUserProfile={hideUserProfile}\r\n                            />\r\n                        </SimpleBar>\r\n                    )}\r\n                    {isCondensed && (\r\n                        <SideBarContent isLight={isLight} hideUserProfile={hideUserProfile} />\r\n                    )}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LeftSidebar;\r\n"],"sourceRoot":""}